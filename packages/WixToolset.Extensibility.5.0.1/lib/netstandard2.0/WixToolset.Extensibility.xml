<?xml version="1.0"?>
<doc>
    <assembly>
        <name>WixToolset.Extensibility</name>
    </assembly>
    <members>
        <member name="T:WixToolset.Extensibility.BaseBinderExtension">
            <summary>
            Base class for creating a resolver extension.
            </summary>
        </member>
        <member name="P:WixToolset.Extensibility.BaseBinderExtension.Context">
            <summary>
            Context for use by the extension.
            </summary>
        </member>
        <member name="P:WixToolset.Extensibility.BaseBinderExtension.Messaging">
            <summary>
            Messaging for use by the extension.
            </summary>
        </member>
        <member name="P:WixToolset.Extensibility.BaseBinderExtension.BackendHelper">
            <summary>
            BackendHelper for use by the extension.
            </summary>
        </member>
        <member name="M:WixToolset.Extensibility.BaseBinderExtension.PreBind(WixToolset.Extensibility.Data.IBindContext)">
            <summary>
            Called at the beginning of bind.
            </summary>
        </member>
        <member name="M:WixToolset.Extensibility.BaseBinderExtension.PostBind(WixToolset.Extensibility.Data.IBindResult)">
            <summary>
            Called at the end of bind.
            </summary>
        </member>
        <member name="T:WixToolset.Extensibility.BaseBurnBackendBinderExtension">
            <summary>
            Base class for creating a Burn backend extension.
            </summary>
        </member>
        <member name="P:WixToolset.Extensibility.BaseBurnBackendBinderExtension.Context">
            <summary>
            Context for use by the extension.
            </summary>
        </member>
        <member name="P:WixToolset.Extensibility.BaseBurnBackendBinderExtension.Messaging">
            <summary>
            Messaging for use by the extension.
            </summary>
        </member>
        <member name="P:WixToolset.Extensibility.BaseBurnBackendBinderExtension.BackendHelper">
            <summary>
            Backend helper for use by the extension.
            </summary>
        </member>
        <member name="P:WixToolset.Extensibility.BaseBurnBackendBinderExtension.SymbolDefinitions">
            <summary>
            Optional symbol definitions.
            </summary>
        </member>
        <member name="M:WixToolset.Extensibility.BaseBurnBackendBinderExtension.PreBackendBind(WixToolset.Extensibility.Data.IBindContext)">
            <summary>
            See <see cref="M:WixToolset.Extensibility.IBurnBackendBinderExtension.PreBackendBind(WixToolset.Extensibility.Data.IBindContext)"/>
            </summary>
        </member>
        <member name="M:WixToolset.Extensibility.BaseBurnBackendBinderExtension.ResolveRelatedFile(System.String,System.String,System.String,WixToolset.Data.SourceLineNumber)">
            <summary>
            See <see cref="M:WixToolset.Extensibility.IBurnBackendBinderExtension.ResolveRelatedFile(System.String,System.String,System.String,WixToolset.Data.SourceLineNumber)"/>
            </summary>
        </member>
        <member name="M:WixToolset.Extensibility.BaseBurnBackendBinderExtension.SymbolsFinalized(WixToolset.Data.IntermediateSection)">
            <summary>
            See <see cref="M:WixToolset.Extensibility.IBurnBackendBinderExtension.SymbolsFinalized(WixToolset.Data.IntermediateSection)"/>
            </summary>
        </member>
        <member name="M:WixToolset.Extensibility.BaseBurnBackendBinderExtension.ResolveUrl(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            See <see cref="M:WixToolset.Extensibility.IBurnBackendBinderExtension.ResolveUrl(System.String,System.String,System.String,System.String,System.String)"/>
            </summary>
        </member>
        <member name="M:WixToolset.Extensibility.BaseBurnBackendBinderExtension.TryProcessSymbol(WixToolset.Data.IntermediateSection,WixToolset.Data.IntermediateSymbol)">
            <summary>
            See <see cref="M:WixToolset.Extensibility.IBurnBackendBinderExtension.TryProcessSymbol(WixToolset.Data.IntermediateSection,WixToolset.Data.IntermediateSymbol)"/>
            </summary>
        </member>
        <member name="M:WixToolset.Extensibility.BaseBurnBackendBinderExtension.PostBackendBind(WixToolset.Extensibility.Data.IBindResult)">
            <summary>
            See <see cref="M:WixToolset.Extensibility.IBurnBackendBinderExtension.PostBackendBind(WixToolset.Extensibility.Data.IBindResult)"/>
            </summary>
            <param name="result"></param>
        </member>
        <member name="T:WixToolset.Extensibility.BaseCommandLineCommand">
            <summary>
            Base class for a command-line command.
            </summary>
        </member>
        <member name="P:WixToolset.Extensibility.BaseCommandLineCommand.ShowLogo">
            <summary>
            See <see cref="P:WixToolset.Extensibility.Data.ICommandLineCommand.ShowLogo" />
            </summary>
        </member>
        <member name="P:WixToolset.Extensibility.BaseCommandLineCommand.StopParsing">
            <summary>
            See <see cref="P:WixToolset.Extensibility.Data.ICommandLineCommand.StopParsing" />
            </summary>
        </member>
        <member name="M:WixToolset.Extensibility.BaseCommandLineCommand.ExecuteAsync(System.Threading.CancellationToken)">
            <summary>
            See <see cref="M:WixToolset.Extensibility.Data.ICommandLineCommand.ExecuteAsync(System.Threading.CancellationToken)" />
            </summary>
        </member>
        <member name="M:WixToolset.Extensibility.BaseCommandLineCommand.GetCommandLineHelp">
            <summary>
            See <see cref="M:WixToolset.Extensibility.Data.ICommandLineCommand.GetCommandLineHelp" />
            </summary>
        </member>
        <member name="M:WixToolset.Extensibility.BaseCommandLineCommand.TryParseArgument(WixToolset.Extensibility.Services.ICommandLineParser,System.String)">
            <summary>
            See <see cref="M:WixToolset.Extensibility.Data.ICommandLineCommand.TryParseArgument(WixToolset.Extensibility.Services.ICommandLineParser,System.String)" />
            </summary>
        </member>
        <member name="T:WixToolset.Extensibility.BaseCompilerExtension">
            <summary>
            Base class for creating a compiler extension.
            </summary>
        </member>
        <member name="P:WixToolset.Extensibility.BaseCompilerExtension.Context">
            <summary>
            Context for use by the extension.
            </summary>
        </member>
        <member name="P:WixToolset.Extensibility.BaseCompilerExtension.Messaging">
            <summary>
            Messaging for use by the extension.
            </summary>
        </member>
        <member name="P:WixToolset.Extensibility.BaseCompilerExtension.ParseHelper">
            <summary>
            ParserHelper for use by the extension.
            </summary>
        </member>
        <member name="P:WixToolset.Extensibility.BaseCompilerExtension.Namespace">
            <summary>
            Gets the schema namespace for this extension.
            </summary>
            <value>Schema namespace supported by this extension.</value>
        </member>
        <member name="M:WixToolset.Extensibility.BaseCompilerExtension.CreateComponentKeyPath">
            <summary>
            Creates a component key path.
            </summary>
        </member>
        <member name="M:WixToolset.Extensibility.BaseCompilerExtension.PreCompile(WixToolset.Extensibility.Data.ICompileContext)">
            <summary>
            Called at the beginning of the compilation of a source file.
            </summary>
        </member>
        <member name="M:WixToolset.Extensibility.BaseCompilerExtension.ParseAttribute(WixToolset.Data.Intermediate,WixToolset.Data.IntermediateSection,System.Xml.Linq.XElement,System.Xml.Linq.XAttribute,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            See <see cref="M:WixToolset.Extensibility.ICompilerExtension.ParseAttribute(WixToolset.Data.Intermediate,WixToolset.Data.IntermediateSection,System.Xml.Linq.XElement,System.Xml.Linq.XAttribute,System.Collections.Generic.IDictionary{System.String,System.String})"/>
            </summary>
        </member>
        <member name="M:WixToolset.Extensibility.BaseCompilerExtension.ParseElement(WixToolset.Data.Intermediate,WixToolset.Data.IntermediateSection,System.Xml.Linq.XElement,System.Xml.Linq.XElement,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            See <see cref="M:WixToolset.Extensibility.ICompilerExtension.ParseElement(WixToolset.Data.Intermediate,WixToolset.Data.IntermediateSection,System.Xml.Linq.XElement,System.Xml.Linq.XElement,System.Collections.Generic.IDictionary{System.String,System.String})"/>
            </summary>
        </member>
        <member name="M:WixToolset.Extensibility.BaseCompilerExtension.ParsePossibleKeyPathElement(WixToolset.Data.Intermediate,WixToolset.Data.IntermediateSection,System.Xml.Linq.XElement,System.Xml.Linq.XElement,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            See <see cref="M:WixToolset.Extensibility.ICompilerExtension.ParsePossibleKeyPathElement(WixToolset.Data.Intermediate,WixToolset.Data.IntermediateSection,System.Xml.Linq.XElement,System.Xml.Linq.XElement,System.Collections.Generic.IDictionary{System.String,System.String})"/>
            </summary>
        </member>
        <member name="M:WixToolset.Extensibility.BaseCompilerExtension.PostCompile(WixToolset.Data.Intermediate)">
            <summary>
            Called at the end of the compilation of a source file.
            </summary>
        </member>
        <member name="T:WixToolset.Extensibility.BaseExtensionCommandLine">
            <summary>
            Base class for extensions to be able to parse the command-line.
            </summary>
        </member>
        <member name="M:WixToolset.Extensibility.BaseExtensionCommandLine.GetCommandLineHelp">
            <summary>
            See <see cref="M:WixToolset.Extensibility.IExtensionCommandLine.GetCommandLineHelp" />
            </summary>
        </member>
        <member name="M:WixToolset.Extensibility.BaseExtensionCommandLine.PostParse">
            <summary>
            See <see cref="M:WixToolset.Extensibility.IExtensionCommandLine.PostParse" />
            </summary>
        </member>
        <member name="M:WixToolset.Extensibility.BaseExtensionCommandLine.PreParse(WixToolset.Extensibility.Data.ICommandLineContext)">
            <summary>
            See <see cref="M:WixToolset.Extensibility.IExtensionCommandLine.PreParse(WixToolset.Extensibility.Data.ICommandLineContext)" />
            </summary>
        </member>
        <member name="M:WixToolset.Extensibility.BaseExtensionCommandLine.TryParseArgument(WixToolset.Extensibility.Services.ICommandLineParser,System.String)">
            <summary>
            See <see cref="M:WixToolset.Extensibility.IExtensionCommandLine.TryParseArgument(WixToolset.Extensibility.Services.ICommandLineParser,System.String)" />
            </summary>
        </member>
        <member name="M:WixToolset.Extensibility.BaseExtensionCommandLine.TryParseCommand(WixToolset.Extensibility.Services.ICommandLineParser,System.String,WixToolset.Extensibility.Data.ICommandLineCommand@)">
            <summary>
            See <see cref="M:WixToolset.Extensibility.IExtensionCommandLine.TryParseCommand(WixToolset.Extensibility.Services.ICommandLineParser,System.String,WixToolset.Extensibility.Data.ICommandLineCommand@)" />
            </summary>
        </member>
        <member name="T:WixToolset.Extensibility.BaseExtensionData">
            <summary>
            Base class for creating a resolver extension.
            </summary>
        </member>
        <member name="P:WixToolset.Extensibility.BaseExtensionData.DefaultCulture">
            <summary>
            Obsolete in WiX v5. Use the WixLocalization/@ExtensionDefaultCulture attribute in the wxl file instead.
            </summary>
        </member>
        <member name="M:WixToolset.Extensibility.BaseExtensionData.GetLibrary(WixToolset.Data.ISymbolDefinitionCreator)">
            <summary>
            See <see cref="M:WixToolset.Extensibility.IExtensionData.GetLibrary(WixToolset.Data.ISymbolDefinitionCreator)"/>
            </summary>
        </member>
        <member name="M:WixToolset.Extensibility.BaseExtensionData.TryGetSymbolDefinitionByName(System.String,WixToolset.Data.IntermediateSymbolDefinition@)">
            <summary>
            See <see cref="M:WixToolset.Extensibility.IExtensionData.TryGetSymbolDefinitionByName(System.String,WixToolset.Data.IntermediateSymbolDefinition@)"/>
            </summary>
        </member>
        <member name="T:WixToolset.Extensibility.BaseExtensionFactory">
             <summary>
             Base class for extension factories.
            
             Implementations may request an IWixToolsetCoreServiceProvider at instantiation by having a single parameter constructor for it.
             </summary>
        </member>
        <member name="P:WixToolset.Extensibility.BaseExtensionFactory.ExtensionTypes">
            <summary>
            The extension types of the WiX extension.
            </summary>
        </member>
        <member name="M:WixToolset.Extensibility.BaseExtensionFactory.TryCreateExtension(System.Type,System.Object@)">
            <summary>
            See <see cref="M:WixToolset.Extensibility.IExtensionFactory.TryCreateExtension(System.Type,System.Object@)"/>
            </summary>
        </member>
        <member name="T:WixToolset.Extensibility.BaseLayoutExtension">
            <summary>
            Base class for creating a resolver extension.
            </summary>
        </member>
        <member name="P:WixToolset.Extensibility.BaseLayoutExtension.Context">
            <summary>
            Context for use by the extension.
            </summary>
        </member>
        <member name="P:WixToolset.Extensibility.BaseLayoutExtension.Messaging">
            <summary>
            Messaging for use by the extension.
            </summary>
        </member>
        <member name="M:WixToolset.Extensibility.BaseLayoutExtension.PreLayout(WixToolset.Extensibility.Data.ILayoutContext)">
            <summary>
            Called at the beginning of layout.
            </summary>
        </member>
        <member name="M:WixToolset.Extensibility.BaseLayoutExtension.CopyFile(System.String,System.String)">
            <summary>
            See <see cref="M:WixToolset.Extensibility.ILayoutExtension.CopyFile(System.String,System.String)"/>
            </summary>
            <param name="source"></param>
            <param name="destination"></param>
            <returns></returns>
        </member>
        <member name="M:WixToolset.Extensibility.BaseLayoutExtension.MoveFile(System.String,System.String)">
            <summary>
            See <see cref="M:WixToolset.Extensibility.ILayoutExtension.MoveFile(System.String,System.String)"/>
            </summary>
            <param name="source"></param>
            <param name="destination"></param>
            <returns></returns>
        </member>
        <member name="M:WixToolset.Extensibility.BaseLayoutExtension.PostLayout">
            <summary>
            Called at the end of ayout.
            </summary>
        </member>
        <member name="T:WixToolset.Extensibility.BaseLibrarianExtension">
            <summary>
            Base class for creating a librarian extension.
            </summary>
        </member>
        <member name="P:WixToolset.Extensibility.BaseLibrarianExtension.Context">
            <summary>
            Context for use by the extension.
            </summary>
        </member>
        <member name="P:WixToolset.Extensibility.BaseLibrarianExtension.Messaging">
            <summary>
            Messaging for use by the extension.
            </summary>
        </member>
        <member name="M:WixToolset.Extensibility.BaseLibrarianExtension.PreCombine(WixToolset.Extensibility.Data.ILibraryContext)">
            <summary>
            Called at the beginning of combining.
            </summary>
            <param name="context">Librarian context.</param>
        </member>
        <member name="M:WixToolset.Extensibility.BaseLibrarianExtension.ResolveFile(WixToolset.Data.SourceLineNumber,WixToolset.Data.IntermediateSymbolDefinition,System.String)">
            <summary>
            Resolves a path to a file path on disk.
            </summary>
            <param name="sourceLineNumber">Source line number for the path to resolve.</param>
            <param name="symbolDefinition">Symbol related to the path to resolve.</param>
            <param name="path">Path to resolve.</param>
            <returns>Optional resolved file result.</returns>
        </member>
        <member name="M:WixToolset.Extensibility.BaseLibrarianExtension.PostCombine(WixToolset.Extensibility.Data.ILibraryResult)">
            <summary>
            Called at the end of combining.
            </summary>
            <param name="result">Combined library result.</param>
        </member>
        <member name="M:WixToolset.Extensibility.BaseLibrarianExtension.CreateResolveFileResult(System.String,System.Collections.Generic.IReadOnlyCollection{System.String})">
            <summary>
            Creates an IResolveFileResult.
            </summary>
            <param name="path">Optional resolved path to file.</param>
            <param name="checkedPaths">Optional collection of paths checked for the file.</param>
            <returns>Resolved file result.</returns>
        </member>
        <member name="T:WixToolset.Extensibility.BaseLinkerExtension">
            <summary>
            Base class for creating a linker extension.
            </summary>
        </member>
        <member name="P:WixToolset.Extensibility.BaseLinkerExtension.Context">
            <summary>
            Context for use by the extension.
            </summary>
        </member>
        <member name="P:WixToolset.Extensibility.BaseLinkerExtension.Messaging">
            <summary>
            Messaging for use by the extension.
            </summary>
        </member>
        <member name="M:WixToolset.Extensibility.BaseLinkerExtension.PreLink(WixToolset.Extensibility.Data.ILinkContext)">
            <summary>
            Called at the beginning of the linking.
            </summary>
        </member>
        <member name="M:WixToolset.Extensibility.BaseLinkerExtension.PostLink(WixToolset.Data.Intermediate)">
            <summary>
            Called at the end of the linking.
            </summary>
        </member>
        <member name="T:WixToolset.Extensibility.BaseOptimizerExtension">
            <summary>
            Base class for creating an optimizer extension.
            </summary>
        </member>
        <member name="M:WixToolset.Extensibility.BaseOptimizerExtension.PreOptimize(WixToolset.Extensibility.Data.IOptimizeContext)">
            <summary>
            Called after all files have been compiled, before built-in optimizations, and before all sections are linked into a single section.
            </summary>
        </member>
        <member name="M:WixToolset.Extensibility.BaseOptimizerExtension.PostOptimize(WixToolset.Extensibility.Data.IOptimizeContext)">
            <summary>
            Called after all files have been compiled, after built-in optimizations, and before all sections are linked into a single section.
            </summary>
        </member>
        <member name="T:WixToolset.Extensibility.BasePreprocessorExtension">
            <summary>
            Base class for creating a preprocessor extension.
            </summary>
        </member>
        <member name="P:WixToolset.Extensibility.BasePreprocessorExtension.Context">
            <summary>
            Context for use by the extension.
            </summary>
        </member>
        <member name="P:WixToolset.Extensibility.BasePreprocessorExtension.Messaging">
            <summary>
            Messaging for use by the extension.
            </summary>
        </member>
        <member name="P:WixToolset.Extensibility.BasePreprocessorExtension.PreprocessHelper">
            <summary>
            PreprocessHelper for use by the extension.
            </summary>
        </member>
        <member name="P:WixToolset.Extensibility.BasePreprocessorExtension.Prefixes">
            <summary>
            Gets or sets the variable prefixes for the extension.
            </summary>
            <value>The variable prefixes for the extension.</value>
        </member>
        <member name="M:WixToolset.Extensibility.BasePreprocessorExtension.PrePreprocess(WixToolset.Extensibility.Data.IPreprocessContext)">
            <summary>
            Called at the beginning of the preprocessing of a source file.
            </summary>
        </member>
        <member name="M:WixToolset.Extensibility.BasePreprocessorExtension.GetVariableValue(System.String,System.String)">
            <summary>
            Gets the value of a variable whose prefix matches the extension.
            </summary>
            <param name="prefix">The prefix of the variable to be processed by the extension.</param>
            <param name="name">The name of the variable.</param>
            <returns>The value of the variable or null if the variable is undefined.</returns>
        </member>
        <member name="M:WixToolset.Extensibility.BasePreprocessorExtension.EvaluateFunction(System.String,System.String,System.String[])">
            <summary>
            Evaluates a function defined in the extension.
            </summary>
            <param name="prefix">The prefix of the function to be processed by the extension.</param>
            <param name="function">The name of the function.</param>
            <param name="args">The list of arguments.</param>
            <returns>The value of the function or null if the function is not defined.</returns>
        </member>
        <member name="M:WixToolset.Extensibility.BasePreprocessorExtension.ProcessPragma(System.String,System.String,System.String,System.Xml.Linq.XContainer)">
            <summary>
            Processes a pragma defined in the extension.
            </summary>
            <param name="prefix">The prefix of the pragma to be processed by the extension.</param>
            <param name="pragma">The name of the pragma.</param>
            <param name="args">The pragma's arguments.</param>
            <param name="parent">The parent node of the pragma.</param>
            <returns>false if the pragma is not defined.</returns>
            <comments>Don't return false for any condition except for unrecognized pragmas. Throw errors that are fatal to the compile. use core.OnMessage for warnings and messages.</comments>
        </member>
        <member name="M:WixToolset.Extensibility.BasePreprocessorExtension.PostPreprocess(WixToolset.Extensibility.Data.IPreprocessResult)">
            <summary>
            Called at the end of the preprocessing of a source file.
            </summary>
        </member>
        <member name="T:WixToolset.Extensibility.BaseResolverExtension">
            <summary>
            Base class for creating a resolver extension.
            </summary>
        </member>
        <member name="P:WixToolset.Extensibility.BaseResolverExtension.Context">
            <summary>
            Context for use by the extension.
            </summary>
        </member>
        <member name="P:WixToolset.Extensibility.BaseResolverExtension.Messaging">
            <summary>
            Messaging for use by the extension.
            </summary>
        </member>
        <member name="M:WixToolset.Extensibility.BaseResolverExtension.CreateResolveFileResult">
            <summary>
            Creates a resolve file result.
            </summary>
        </member>
        <member name="M:WixToolset.Extensibility.BaseResolverExtension.PreResolve(WixToolset.Extensibility.Data.IResolveContext)">
            <summary>
            Called at the beginning of the resolving variables and files.
            </summary>
        </member>
        <member name="M:WixToolset.Extensibility.BaseResolverExtension.ResolveFile(System.String,WixToolset.Data.IntermediateSymbolDefinition,WixToolset.Data.SourceLineNumber,WixToolset.Extensibility.Data.BindStage)">
            <summary>
            See <see cref="M:WixToolset.Extensibility.IResolverExtension.ResolveFile(System.String,WixToolset.Data.IntermediateSymbolDefinition,WixToolset.Data.SourceLineNumber,WixToolset.Extensibility.Data.BindStage)"/>
            </summary>
            <param name="source"></param>
            <param name="symbolDefinition"></param>
            <param name="sourceLineNumbers"></param>
            <param name="bindStage"></param>
            <returns></returns>
        </member>
        <member name="M:WixToolset.Extensibility.BaseResolverExtension.PostResolve(WixToolset.Extensibility.Data.IResolveResult)">
            <summary>
            Called at the end of resolve.
            </summary>
        </member>
        <member name="T:WixToolset.Extensibility.BaseWindowsInstallerBackendBinderExtension">
            <summary>
            Base class for creating a windows installer backend extension.
            </summary>
        </member>
        <member name="P:WixToolset.Extensibility.BaseWindowsInstallerBackendBinderExtension.Context">
            <summary>
            Context for use by the extension.
            </summary>
        </member>
        <member name="P:WixToolset.Extensibility.BaseWindowsInstallerBackendBinderExtension.Messaging">
            <summary>
            Messaging for use by the extension.
            </summary>
        </member>
        <member name="P:WixToolset.Extensibility.BaseWindowsInstallerBackendBinderExtension.BackendHelper">
            <summary>
            Backend helper for use by the extension.
            </summary>
        </member>
        <member name="P:WixToolset.Extensibility.BaseWindowsInstallerBackendBinderExtension.TableDefinitions">
            <summary>
            Optional table definitions.
            </summary>
        </member>
        <member name="M:WixToolset.Extensibility.BaseWindowsInstallerBackendBinderExtension.CreateResolvedCabinet">
            <summary>
            Creates a resolved cabinet result.
            </summary>
        </member>
        <member name="M:WixToolset.Extensibility.BaseWindowsInstallerBackendBinderExtension.PreBackendBind(WixToolset.Extensibility.Data.IBindContext)">
            <summary>
            See <see cref="M:WixToolset.Extensibility.IWindowsInstallerBackendBinderExtension.PreBackendBind(WixToolset.Extensibility.Data.IBindContext)"/>
            </summary>
        </member>
        <member name="M:WixToolset.Extensibility.BaseWindowsInstallerBackendBinderExtension.SymbolsFinalized(WixToolset.Data.IntermediateSection)">
            <summary>
            See <see cref="M:WixToolset.Extensibility.IWindowsInstallerBackendBinderExtension.SymbolsFinalized(WixToolset.Data.IntermediateSection)"/>
            </summary>
        </member>
        <member name="M:WixToolset.Extensibility.BaseWindowsInstallerBackendBinderExtension.FinalizePatchFilterIds(WixToolset.Data.WindowsInstaller.WindowsInstallerData,System.Collections.Generic.IDictionary{WixToolset.Data.WindowsInstaller.Row,System.String},System.String)">
            <summary>
            See <see cref="M:WixToolset.Extensibility.IWindowsInstallerBackendBinderExtension.FinalizePatchFilterIds(WixToolset.Data.WindowsInstaller.WindowsInstallerData,System.Collections.Generic.IDictionary{WixToolset.Data.WindowsInstaller.Row,System.String},System.String)"/>
            </summary>
        </member>
        <member name="M:WixToolset.Extensibility.BaseWindowsInstallerBackendBinderExtension.ResolveCabinet(System.String,System.Collections.Generic.IEnumerable{WixToolset.Extensibility.Data.IBindFileWithPath})">
            <summary>
            See <see cref="M:WixToolset.Extensibility.IWindowsInstallerBackendBinderExtension.PreBackendBind(WixToolset.Extensibility.Data.IBindContext)"/>
            </summary>
        </member>
        <member name="M:WixToolset.Extensibility.BaseWindowsInstallerBackendBinderExtension.ResolveMedia(WixToolset.Data.Symbols.MediaSymbol,System.String,System.String)">
            <summary>
            See <see cref="M:WixToolset.Extensibility.IWindowsInstallerBackendBinderExtension.PreBackendBind(WixToolset.Extensibility.Data.IBindContext)"/>
            </summary>
        </member>
        <member name="M:WixToolset.Extensibility.BaseWindowsInstallerBackendBinderExtension.TryProcessSymbol(WixToolset.Data.IntermediateSection,WixToolset.Data.IntermediateSymbol,WixToolset.Data.WindowsInstaller.WindowsInstallerData,WixToolset.Data.WindowsInstaller.TableDefinitionCollection)">
            <summary>
            See <see cref="M:WixToolset.Extensibility.IWindowsInstallerBackendBinderExtension.TryProcessSymbol(WixToolset.Data.IntermediateSection,WixToolset.Data.IntermediateSymbol,WixToolset.Data.WindowsInstaller.WindowsInstallerData,WixToolset.Data.WindowsInstaller.TableDefinitionCollection)"/>
            </summary>
        </member>
        <member name="M:WixToolset.Extensibility.BaseWindowsInstallerBackendBinderExtension.PostBackendBind(WixToolset.Extensibility.Data.IBindResult)">
            <summary>
            See <see cref="M:WixToolset.Extensibility.IWindowsInstallerBackendBinderExtension.PreBackendBind(WixToolset.Extensibility.Data.IBindContext)"/>
            </summary>
        </member>
        <member name="T:WixToolset.Extensibility.BaseWindowsInstallerDecompilerExtension">
            <summary>
            Base class for creating a windows installer decompiler extensions.
            </summary>
        </member>
        <member name="P:WixToolset.Extensibility.BaseWindowsInstallerDecompilerExtension.Context">
            <summary>
            Context for use by the extension.
            </summary>
        </member>
        <member name="P:WixToolset.Extensibility.BaseWindowsInstallerDecompilerExtension.Messaging">
            <summary>
            Messaging for use by the extension.
            </summary>
        </member>
        <member name="P:WixToolset.Extensibility.BaseWindowsInstallerDecompilerExtension.DecompilerHelper">
            <summary>
            Decompiler helper for use by the extension.
            </summary>
        </member>
        <member name="P:WixToolset.Extensibility.BaseWindowsInstallerDecompilerExtension.TableDefinitions">
            <summary>
            See <see cref="P:WixToolset.Extensibility.IWindowsInstallerDecompilerExtension.TableDefinitions"/>
            </summary>
        </member>
        <member name="M:WixToolset.Extensibility.BaseWindowsInstallerDecompilerExtension.PreDecompile(WixToolset.Extensibility.Data.IWindowsInstallerDecompileContext,WixToolset.Extensibility.Services.IWindowsInstallerDecompilerHelper)">
            <summary>
            See <see cref="M:WixToolset.Extensibility.IWindowsInstallerDecompilerExtension.PostDecompile(WixToolset.Extensibility.Data.IWindowsInstallerDecompileResult)"/>
            </summary>
        </member>
        <member name="M:WixToolset.Extensibility.BaseWindowsInstallerDecompilerExtension.PreDecompileTables(WixToolset.Data.WindowsInstaller.TableIndexedCollection)">
            <summary>
            See <see cref="M:WixToolset.Extensibility.IWindowsInstallerDecompilerExtension.PreDecompileTables(WixToolset.Data.WindowsInstaller.TableIndexedCollection)"/>
            </summary>
        </member>
        <member name="M:WixToolset.Extensibility.BaseWindowsInstallerDecompilerExtension.TryDecompileTable(WixToolset.Data.WindowsInstaller.Table)">
            <summary>
            See <see cref="M:WixToolset.Extensibility.IWindowsInstallerDecompilerExtension.TryDecompileTable(WixToolset.Data.WindowsInstaller.Table)"/>
            </summary>
        </member>
        <member name="M:WixToolset.Extensibility.BaseWindowsInstallerDecompilerExtension.PostDecompileTables(WixToolset.Data.WindowsInstaller.TableIndexedCollection)">
            <summary>
            See <see cref="M:WixToolset.Extensibility.IWindowsInstallerDecompilerExtension.PostDecompileTables(WixToolset.Data.WindowsInstaller.TableIndexedCollection)"/>
            </summary>
        </member>
        <member name="M:WixToolset.Extensibility.BaseWindowsInstallerDecompilerExtension.PostDecompile(WixToolset.Extensibility.Data.IWindowsInstallerDecompileResult)">
            <summary>
            See <see cref="M:WixToolset.Extensibility.IWindowsInstallerDecompilerExtension.PostDecompile(WixToolset.Extensibility.Data.IWindowsInstallerDecompileResult)"/>
            </summary>
        </member>
        <member name="T:WixToolset.Extensibility.CompilerConstants">
            <summary>
            Constants used by compiler.
            </summary>
        </member>
        <member name="F:WixToolset.Extensibility.CompilerConstants.IntegerNotSet">
            <summary>
            
            </summary>
        </member>
        <member name="F:WixToolset.Extensibility.CompilerConstants.IllegalInteger">
            <summary>
            
            </summary>
        </member>
        <member name="F:WixToolset.Extensibility.CompilerConstants.LongNotSet">
            <summary>
            
            </summary>
        </member>
        <member name="F:WixToolset.Extensibility.CompilerConstants.IllegalLong">
            <summary>
            
            </summary>
        </member>
        <member name="F:WixToolset.Extensibility.CompilerConstants.IllegalGuid">
            <summary>
            
            </summary>
        </member>
        <member name="F:WixToolset.Extensibility.CompilerConstants.IllegalVersion">
            <summary>
            
            </summary>
        </member>
        <member name="T:WixToolset.Extensibility.Data.BindStage">
            <summary>
            
            </summary>
        </member>
        <member name="F:WixToolset.Extensibility.Data.BindStage.Normal">
            <summary>
            Normal binding
            </summary>
        </member>
        <member name="F:WixToolset.Extensibility.Data.BindStage.Target">
            <summary>
            Bind the file path of the target build file
            </summary>
        </member>
        <member name="F:WixToolset.Extensibility.Data.BindStage.Updated">
            <summary>
            Bind the file path of the updated build file
            </summary>
        </member>
        <member name="T:WixToolset.Extensibility.Data.BundleConditionPhase">
            <summary>
            The Burn execution phase during which a Condition will be evaluated.
            </summary>
        </member>
        <member name="F:WixToolset.Extensibility.Data.BundleConditionPhase.Startup">
            <summary>
            Condition is evaluated by the engine before loading the BootstrapperApplication (Bundle/@Condition).
            </summary>
        </member>
        <member name="F:WixToolset.Extensibility.Data.BundleConditionPhase.Detect">
            <summary>
            Condition is evaluated during Detect (ExePackage/@DetectCondition).
            </summary>
        </member>
        <member name="F:WixToolset.Extensibility.Data.BundleConditionPhase.Plan">
            <summary>
            Condition is evaluated during Plan (ExePackage/@InstallCondition).
            </summary>
        </member>
        <member name="F:WixToolset.Extensibility.Data.BundleConditionPhase.Execute">
            <summary>
            Condition is evaluated during Apply (MsiProperty/@Condition).
            </summary>
        </member>
        <member name="F:WixToolset.Extensibility.Data.BundleConditionPhase.Shutdown">
            <summary>
            Condition is evaluated after Apply.
            </summary>
        </member>
        <member name="T:WixToolset.Extensibility.Data.BundleVariableNameRule">
            <summary>
            When validating a bundle variable name, which special restrictions to ignore.
            </summary>
        </member>
        <member name="F:WixToolset.Extensibility.Data.BundleVariableNameRule.EnforceAllRestrictions">
            <summary>
            Enforce all special restrictions.
            </summary>
        </member>
        <member name="F:WixToolset.Extensibility.Data.BundleVariableNameRule.CanBeBuiltIn">
            <summary>
            Allow names of built-in variables.
            </summary>
        </member>
        <member name="F:WixToolset.Extensibility.Data.BundleVariableNameRule.CanBeWellKnown">
            <summary>
            Allow names of well-known variables.
            </summary>
        </member>
        <member name="F:WixToolset.Extensibility.Data.BundleVariableNameRule.CanHaveReservedPrefix">
            <summary>
            Allow names that are not built-in and are not well-known and start with 'Wix'.
            </summary>
        </member>
        <member name="T:WixToolset.Extensibility.Data.BurnPlatforms">
            <summary>
            Platforms that have been supported by Burn.
            </summary>
        </member>
        <member name="F:WixToolset.Extensibility.Data.BurnPlatforms.None">
            <summary>Not specified.</summary>
        </member>
        <member name="F:WixToolset.Extensibility.Data.BurnPlatforms.X86">
            <summary>x86.</summary>
        </member>
        <member name="F:WixToolset.Extensibility.Data.BurnPlatforms.X64">
            <summary>x64.</summary>
        </member>
        <member name="F:WixToolset.Extensibility.Data.BurnPlatforms.ARM64">
            <summary>arm64.</summary>
        </member>
        <member name="T:WixToolset.Extensibility.Data.CabinetBuildOption">
            <summary>
            Options for building the cabinet.
            </summary>
        </member>
        <member name="F:WixToolset.Extensibility.Data.CabinetBuildOption.BuildAndMove">
            <summary>
            Build the cabinet and move it to the target location.
            </summary>
        </member>
        <member name="F:WixToolset.Extensibility.Data.CabinetBuildOption.BuildAndCopy">
            <summary>
            Build the cabinet and copy it to the target location.
            </summary>
        </member>
        <member name="F:WixToolset.Extensibility.Data.CabinetBuildOption.Copy">
            <summary>
            Just copy the cabinet to the target location.
            </summary>
        </member>
        <member name="T:WixToolset.Extensibility.Data.CommandLineHelp">
            <summary>
            A command line option (switch or command) description.
            </summary>
        </member>
        <member name="M:WixToolset.Extensibility.Data.CommandLineHelp.#ctor(System.String,System.String,System.Collections.Generic.IReadOnlyCollection{WixToolset.Extensibility.Data.CommandLineHelpSwitch},System.Collections.Generic.IReadOnlyCollection{WixToolset.Extensibility.Data.CommandLineHelpCommand})">
            <summary>
            Creates command line help.
            </summary>
            <param name="description">Description for the command line option.</param>
            <param name="usage">Optional usage for the command line option.</param>
            <param name="switches">Optional list of switches.</param>
            <param name="commands">Optional list of commands.</param>
        </member>
        <member name="P:WixToolset.Extensibility.Data.CommandLineHelp.Description">
            <summary>
            Description for the command line option.
            </summary>
        </member>
        <member name="P:WixToolset.Extensibility.Data.CommandLineHelp.Usage">
            <summary>
            Usage for the command line option.
            </summary>
        </member>
        <member name="P:WixToolset.Extensibility.Data.CommandLineHelp.Notes">
            <summary>
            Optional additional notes for the command line option.
            </summary>
        </member>
        <member name="P:WixToolset.Extensibility.Data.CommandLineHelp.Switches">
            <summary>
            Optional list of command line switches.
            </summary>
        </member>
        <member name="P:WixToolset.Extensibility.Data.CommandLineHelp.Commands">
            <summary>
            Optional list of command line commands.
            </summary>
        </member>
        <member name="T:WixToolset.Extensibility.Data.CommandLineHelpCommand">
            <summary>
            A command line command description.
            </summary>
        </member>
        <member name="M:WixToolset.Extensibility.Data.CommandLineHelpCommand.#ctor(System.String,System.String)">
            <summary>
            Creates help for command line command.
            </summary>
            <param name="name">Name of command.</param>
            <param name="description">Description for command.</param>
        </member>
        <member name="P:WixToolset.Extensibility.Data.CommandLineHelpCommand.Name">
            <summary>
            Name of command.
            </summary>
        </member>
        <member name="P:WixToolset.Extensibility.Data.CommandLineHelpCommand.Description">
            <summary>
            Description of the command.
            </summary>
        </member>
        <member name="T:WixToolset.Extensibility.Data.CommandLineHelpSwitch">
            <summary>
            A command line switch description.
            </summary>
        </member>
        <member name="M:WixToolset.Extensibility.Data.CommandLineHelpSwitch.#ctor(System.String,System.String)">
            <summary>
            Creates help for command line switch.
            </summary>
            <param name="name">Name of switch.</param>
            <param name="description">Description for switch.</param>
        </member>
        <member name="M:WixToolset.Extensibility.Data.CommandLineHelpSwitch.#ctor(System.String,System.String,System.String)">
            <summary>
            Creates help for command line switch.
            </summary>
            <param name="name">Name of switch.</param>
            <param name="shortName">Optional short name of switch.</param>
            <param name="description">Description for switch.</param>
        </member>
        <member name="P:WixToolset.Extensibility.Data.CommandLineHelpSwitch.Name">
            <summary>
            Name for switch.
            </summary>
        </member>
        <member name="P:WixToolset.Extensibility.Data.CommandLineHelpSwitch.ShortName">
            <summary>
            Optional short name for switch.
            </summary>
        </member>
        <member name="P:WixToolset.Extensibility.Data.CommandLineHelpSwitch.Description">
            <summary>
            Description of the switch.
            </summary>
        </member>
        <member name="T:WixToolset.Extensibility.Data.CustomActionPlatforms">
            <summary>
            Platforms supported by custom actions.
            </summary>
        </member>
        <member name="F:WixToolset.Extensibility.Data.CustomActionPlatforms.None">
            <summary>Not specified.</summary>
        </member>
        <member name="F:WixToolset.Extensibility.Data.CustomActionPlatforms.X86">
            <summary>x86.</summary>
        </member>
        <member name="F:WixToolset.Extensibility.Data.CustomActionPlatforms.X64">
            <summary>x64.</summary>
        </member>
        <member name="F:WixToolset.Extensibility.Data.CustomActionPlatforms.ARM64">
            <summary>arm64.</summary>
        </member>
        <member name="T:WixToolset.Extensibility.Data.IBindContext">
            <summary>
            Bind context.
            </summary>
        </member>
        <member name="P:WixToolset.Extensibility.Data.IBindContext.ServiceProvider">
            <summary>
            Service provider.
            </summary>
        </member>
        <member name="P:WixToolset.Extensibility.Data.IBindContext.BindPaths">
            <summary>
            Bind paths used during resolution.
            </summary>
        </member>
        <member name="P:WixToolset.Extensibility.Data.IBindContext.CabbingThreadCount">
            <summary>
            Counnt of threads to use in cabbing.
            </summary>
        </member>
        <member name="P:WixToolset.Extensibility.Data.IBindContext.CabCachePath">
            <summary>
            Cabinet cache path.
            </summary>
        </member>
        <member name="P:WixToolset.Extensibility.Data.IBindContext.DefaultCompressionLevel">
            <summary>
            Default compression level.
            </summary>
        </member>
        <member name="P:WixToolset.Extensibility.Data.IBindContext.DelayedFields">
            <summary>
            Delayed fields that need to be resolved again.
            </summary>
        </member>
        <member name="P:WixToolset.Extensibility.Data.IBindContext.ExpectedEmbeddedFiles">
            <summary>
            Embedded files to extract.
            </summary>
        </member>
        <member name="P:WixToolset.Extensibility.Data.IBindContext.Extensions">
            <summary>
            Binder extensions.
            </summary>
        </member>
        <member name="P:WixToolset.Extensibility.Data.IBindContext.FileSystemExtensions">
            <summary>
            File system extensions.
            </summary>
        </member>
        <member name="P:WixToolset.Extensibility.Data.IBindContext.IntermediateFolder">
            <summary>
            Intermedaite folder.
            </summary>
        </member>
        <member name="P:WixToolset.Extensibility.Data.IBindContext.IntermediateRepresentation">
            <summary>
            Intermediate representation to bind.
            </summary>
        </member>
        <member name="P:WixToolset.Extensibility.Data.IBindContext.OutputPath">
            <summary>
            Output path to bind to.
            </summary>
        </member>
        <member name="P:WixToolset.Extensibility.Data.IBindContext.OutputType">
            <summary>
            Output type to bind to.
            </summary>
        </member>
        <member name="P:WixToolset.Extensibility.Data.IBindContext.PdbType">
            <summary>
            Type of PDB to create.
            </summary>
        </member>
        <member name="P:WixToolset.Extensibility.Data.IBindContext.PdbPath">
            <summary>
            Output path for PDB.
            </summary>
        </member>
        <member name="P:WixToolset.Extensibility.Data.IBindContext.ResolvedCodepage">
            <summary>
            Codepage from resolve.
            </summary>
        </member>
        <member name="P:WixToolset.Extensibility.Data.IBindContext.ResolvedSummaryInformationCodepage">
            <summary>
            Summary information codepage from resolve.
            </summary>
        </member>
        <member name="P:WixToolset.Extensibility.Data.IBindContext.ResolvedLcid">
            <summary>
            LCID from resolve.
            </summary>
        </member>
        <member name="P:WixToolset.Extensibility.Data.IBindContext.SuppressLayout">
            <summary>
            Skip creation of output.
            </summary>
        </member>
        <member name="P:WixToolset.Extensibility.Data.IBindContext.CancellationToken">
            <summary>
            Cancellation token.
            </summary>
        </member>
        <member name="T:WixToolset.Extensibility.Data.IBindPath">
            <summary>
            Interface for a bind path.
            </summary>
        </member>
        <member name="P:WixToolset.Extensibility.Data.IBindPath.Name">
            <summary>
            Name of the bind path or String.Empty if the path is unnamed.
            </summary>
        </member>
        <member name="P:WixToolset.Extensibility.Data.IBindPath.Path">
            <summary>
            Path for the bind path.
            </summary>
        </member>
        <member name="P:WixToolset.Extensibility.Data.IBindPath.Stage">
            <summary>
            Stage for the bind path.
            </summary>
        </member>
        <member name="T:WixToolset.Extensibility.Data.IBindResult">
            <summary>
            Result of bind operation.
            </summary>
        </member>
        <member name="P:WixToolset.Extensibility.Data.IBindResult.FileTransfers">
            <summary>
            Collection of file transfers to complete.
            </summary>
        </member>
        <member name="P:WixToolset.Extensibility.Data.IBindResult.TrackedFiles">
            <summary>
            Collection of files tracked during binding.
            </summary>
        </member>
        <member name="P:WixToolset.Extensibility.Data.IBindResult.Wixout">
            <summary>
            Output of binding.
            </summary>
        </member>
        <member name="T:WixToolset.Extensibility.Data.ICommandLineArguments">
            <summary>
            Parsed command-line arguments.
            </summary>
        </member>
        <member name="M:WixToolset.Extensibility.Data.ICommandLineArguments.Populate(System.String)">
            <summary>
            Populate this argument from a string.
            </summary>
            <param name="commandLine">String to parse.</param>
        </member>
        <member name="M:WixToolset.Extensibility.Data.ICommandLineArguments.Populate(System.String[])">
            <summary>
            Populate this argument from array of strings.
            </summary>
            <param name="args">Array of strings.</param>
        </member>
        <member name="M:WixToolset.Extensibility.Data.ICommandLineArguments.Parse">
            <summary>
            Parses this arguments after it is populated.
            </summary>
            <returns>Parser for this arguments.</returns>
        </member>
        <member name="T:WixToolset.Extensibility.Data.ICommandLineCommand">
            <summary>
            Custom command.
            </summary>
        </member>
        <member name="P:WixToolset.Extensibility.Data.ICommandLineCommand.ShowLogo">
            <summary>
            Indicates the command-line should show the logo.
            </summary>
        </member>
        <member name="P:WixToolset.Extensibility.Data.ICommandLineCommand.StopParsing">
            <summary>
            Indicates the command-line parsing can stop.
            </summary>
        </member>
        <member name="M:WixToolset.Extensibility.Data.ICommandLineCommand.GetCommandLineHelp">
            <summary>
            Gets the help for this command.
            </summary>
        </member>
        <member name="M:WixToolset.Extensibility.Data.ICommandLineCommand.ExecuteAsync(System.Threading.CancellationToken)">
            <summary>
            Executes the command.
            </summary>
            <param name="cancellationToken">Cancellation token.</param>
            <returns>Exit code for the command.</returns>
        </member>
        <member name="M:WixToolset.Extensibility.Data.ICommandLineCommand.TryParseArgument(WixToolset.Extensibility.Services.ICommandLineParser,System.String)">
            <summary>
            Allows the command to parse command-line arguments.
            </summary>
            <param name="parser">Parser to help parse the argument and additional arguments.</param>
            <param name="argument">Argument to parse.</param>
            <returns>True if the argument is recognized; otherwise false to allow another extension to process it.</returns>
        </member>
        <member name="T:WixToolset.Extensibility.Data.ICommandLineContext">
            <summary>
            Command-line context.
            </summary>
        </member>
        <member name="P:WixToolset.Extensibility.Data.ICommandLineContext.ServiceProvider">
            <summary>
            Service provider.
            </summary>
        </member>
        <member name="P:WixToolset.Extensibility.Data.ICommandLineContext.ExtensionManager">
            <summary>
            Extension manager.
            </summary>
        </member>
        <member name="P:WixToolset.Extensibility.Data.ICommandLineContext.Arguments">
            <summary>
            Command-line arguments.
            </summary>
        </member>
        <member name="T:WixToolset.Extensibility.Data.ICompileContext">
            <summary>
            Context provided to the compiler.
            </summary>
        </member>
        <member name="P:WixToolset.Extensibility.Data.ICompileContext.ServiceProvider">
            <summary>
            Service provider made available to the compiler and its extensions.
            </summary>
        </member>
        <member name="P:WixToolset.Extensibility.Data.ICompileContext.CompilationId">
            <summary>
            Unique identifier for the compilation.
            </summary>
        </member>
        <member name="P:WixToolset.Extensibility.Data.ICompileContext.Extensions">
            <summary>
            Set of extensions provided to the compiler.
            </summary>
        </member>
        <member name="P:WixToolset.Extensibility.Data.ICompileContext.IntermediateFolder">
            <summary>
            Intermediate folder.
            </summary>
        </member>
        <member name="P:WixToolset.Extensibility.Data.ICompileContext.OutputPath">
            <summary>
            Output path.
            </summary>
        </member>
        <member name="P:WixToolset.Extensibility.Data.ICompileContext.Platform">
            <summary>
            Gets or sets the platform which the compiler will use when defaulting 64-bit attributes and elements.
            </summary>
            <value>The platform which the compiler will use when defaulting 64-bit attributes and elements.</value>
        </member>
        <member name="P:WixToolset.Extensibility.Data.ICompileContext.IsCurrentPlatform64Bit">
            <summary>
            Calculates whether the target platform for the compilation is 64-bit or not.
            </summary>
        </member>
        <member name="P:WixToolset.Extensibility.Data.ICompileContext.Source">
            <summary>
            Source document being compiled.
            </summary>
        </member>
        <member name="P:WixToolset.Extensibility.Data.ICompileContext.CancellationToken">
            <summary>
            Cancellation token.
            </summary>
        </member>
        <member name="T:WixToolset.Extensibility.Data.IComponentKeyPath">
            <summary>
            Interface used to by extensions to define a component key path or
            (non-intuitively) the executable payload for a the bootstrapper application.
            </summary>
        </member>
        <member name="P:WixToolset.Extensibility.Data.IComponentKeyPath.Explicit">
            <summary>
            Indicates whether the key path was specified explicitly.
            </summary>
        </member>
        <member name="P:WixToolset.Extensibility.Data.IComponentKeyPath.Id">
            <summary>
            Gets or sets the key path or executable payload identifier.
            </summary>
        </member>
        <member name="P:WixToolset.Extensibility.Data.IComponentKeyPath.Type">
            <summary>
            Gets or sets the key path type for the component or if the
            executable payload for a bootstrapper application is provided
            as a File.
            </summary>
        </member>
        <member name="T:WixToolset.Extensibility.Data.ExtensionCacheLocationScope">
            <summary>
            Extension cache location scope.
            </summary>
        </member>
        <member name="F:WixToolset.Extensibility.Data.ExtensionCacheLocationScope.Project">
            <summary>
            Project extension cache location.
            </summary>
        </member>
        <member name="F:WixToolset.Extensibility.Data.ExtensionCacheLocationScope.User">
            <summary>
            User extension cache location.
            </summary>
        </member>
        <member name="F:WixToolset.Extensibility.Data.ExtensionCacheLocationScope.Machine">
            <summary>
            Machine extension cache location.
            </summary>
        </member>
        <member name="T:WixToolset.Extensibility.Data.IExtensionCacheLocation">
            <summary>
            Location where extensions may be cached.
            </summary>
        </member>
        <member name="P:WixToolset.Extensibility.Data.IExtensionCacheLocation.Path">
            <summary>
            Path for  the extension cache location.
            </summary>
        </member>
        <member name="P:WixToolset.Extensibility.Data.IExtensionCacheLocation.Scope">
            <summary>
            Scope for the extension cache location.
            </summary>
        </member>
        <member name="T:WixToolset.Extensibility.Data.IFileFacade">
            <summary>
            Interface that provides a common facade over file information.
            </summary>
        </member>
        <member name="P:WixToolset.Extensibility.Data.IFileFacade.ComponentRef">
            <summary>
            Component containing the file.
            </summary>
        </member>
        <member name="P:WixToolset.Extensibility.Data.IFileFacade.Compressed">
            <summary>
            Indicates whether the file is compressed.
            </summary>
        </member>
        <member name="P:WixToolset.Extensibility.Data.IFileFacade.DiskId">
            <summary>
            Disk Id for the file.
            </summary>
        </member>
        <member name="P:WixToolset.Extensibility.Data.IFileFacade.FileName">
            <summary>
            Name of the file.
            </summary>
        </member>
        <member name="P:WixToolset.Extensibility.Data.IFileFacade.FileSize">
            <summary>
            Size of the file.
            </summary>
        </member>
        <member name="P:WixToolset.Extensibility.Data.IFileFacade.Identifier">
            <summary>
            Underlying identifier of the file.
            </summary>
        </member>
        <member name="P:WixToolset.Extensibility.Data.IFileFacade.Id">
            <summary>
            Helper accessor for the Id of the Identifier.
            </summary>
        </member>
        <member name="P:WixToolset.Extensibility.Data.IFileFacade.Language">
            <summary>
            Language of the file.
            </summary>
        </member>
        <member name="P:WixToolset.Extensibility.Data.IFileFacade.PatchGroup">
            <summary>
            Optional patch group for the file.
            </summary>
        </member>
        <member name="P:WixToolset.Extensibility.Data.IFileFacade.Sequence">
            <summary>
            Sequence of the file.
            </summary>
        </member>
        <member name="P:WixToolset.Extensibility.Data.IFileFacade.SourceLineNumber">
            <summary>
            Source line number that define the file.
            </summary>
        </member>
        <member name="P:WixToolset.Extensibility.Data.IFileFacade.SourcePath">
            <summary>
            Source to the file.
            </summary>
        </member>
        <member name="P:WixToolset.Extensibility.Data.IFileFacade.Uncompressed">
            <summary>
            Indicates whether the file is to be uncompressed.
            </summary>
        </member>
        <member name="P:WixToolset.Extensibility.Data.IFileFacade.Version">
            <summary>
            Version of the file.
            </summary>
        </member>
        <member name="P:WixToolset.Extensibility.Data.IFileFacade.MsiFileHashSymbol">
            <summary>
            Calculated hash of the file.
            </summary>
        </member>
        <member name="P:WixToolset.Extensibility.Data.IFileFacade.AssemblyNameSymbols">
            <summary>
            Assembly names found in the file.
            </summary>
        </member>
        <member name="T:WixToolset.Extensibility.Data.IFileTransfer">
            <summary>
            Structure used for all file transfer information.
            </summary>
        </member>
        <member name="P:WixToolset.Extensibility.Data.IFileTransfer.Destination">
            <summary>Destination path for file.</summary>
        </member>
        <member name="P:WixToolset.Extensibility.Data.IFileTransfer.Move">
            <summary>Flag if file should be moved (optimal).</summary>
        </member>
        <member name="P:WixToolset.Extensibility.Data.IFileTransfer.Redundant">
            <summary>Set during layout of media when the file transfer when the source and target resolve to the same path.</summary>
        </member>
        <member name="P:WixToolset.Extensibility.Data.IFileTransfer.Source">
            <summary>Source path to file.</summary>
        </member>
        <member name="P:WixToolset.Extensibility.Data.IFileTransfer.SourceLineNumbers">
            <summary>Optional source line numbers where this file transfer orginated.</summary>
        </member>
        <member name="T:WixToolset.Extensibility.Data.IIncludedFile">
            <summary>
            Interface for an included file.
            </summary>
        </member>
        <member name="P:WixToolset.Extensibility.Data.IIncludedFile.Path">
            <summary>
            Gets the full path of the included file.
            </summary>
            <value>The full path of the included file.</value>
        </member>
        <member name="P:WixToolset.Extensibility.Data.IIncludedFile.SourceLineNumbers">
            <summary>
            Gets the source line numbers.
            </summary>
            <value>The source line numbers.</value>
        </member>
        <member name="T:WixToolset.Extensibility.Data.ILayoutContext">
            <summary>
            Context for laying out files.
            </summary>
        </member>
        <member name="P:WixToolset.Extensibility.Data.ILayoutContext.ServiceProvider">
            <summary>
            Service provider.
            </summary>
        </member>
        <member name="P:WixToolset.Extensibility.Data.ILayoutContext.Extensions">
            <summary>
            Extensions for use during layout.
            </summary>
        </member>
        <member name="P:WixToolset.Extensibility.Data.ILayoutContext.TrackedFiles">
            <summary>
            Set of tracked of files created during processing to be cleaned up.
            </summary>
        </member>
        <member name="P:WixToolset.Extensibility.Data.ILayoutContext.FileTransfers">
            <summary>
            Set of files to transfer.
            </summary>
        </member>
        <member name="P:WixToolset.Extensibility.Data.ILayoutContext.IntermediateFolder">
            <summary>
            Intermediate folder.
            </summary>
        </member>
        <member name="P:WixToolset.Extensibility.Data.ILayoutContext.OutputPath">
            <summary>
            Output path.
            </summary>
        </member>
        <member name="P:WixToolset.Extensibility.Data.ILayoutContext.TrackingFile">
            <summary>
            File to capture list of content, built output and copied output files.
            </summary>
        </member>
        <member name="P:WixToolset.Extensibility.Data.ILayoutContext.ResetAcls">
            <summary>
            Reset ACLs on file transfers.
            </summary>
        </member>
        <member name="P:WixToolset.Extensibility.Data.ILayoutContext.CancellationToken">
            <summary>
            Cancellation token.
            </summary>
        </member>
        <member name="T:WixToolset.Extensibility.Data.ILibraryContext">
            <summary>
            Context provided during library creation operations.
            </summary>
        </member>
        <member name="P:WixToolset.Extensibility.Data.ILibraryContext.ServiceProvider">
            <summary>
            Service provider.
            </summary>
        </member>
        <member name="P:WixToolset.Extensibility.Data.ILibraryContext.BindFiles">
            <summary>
            Indicates whether files should be bound into the library.
            </summary>
        </member>
        <member name="P:WixToolset.Extensibility.Data.ILibraryContext.BindPaths">
            <summary>
            Collection of bindpaths used to bind files.
            </summary>
        </member>
        <member name="P:WixToolset.Extensibility.Data.ILibraryContext.BindVariables">
            <summary>
            Bind variables used when binding files.
            </summary>
        </member>
        <member name="P:WixToolset.Extensibility.Data.ILibraryContext.Extensions">
            <summary>
            Collection of extensions used during creation of library.
            </summary>
        </member>
        <member name="P:WixToolset.Extensibility.Data.ILibraryContext.LibraryId">
            <summary>
            Identifier of the library.
            </summary>
        </member>
        <member name="P:WixToolset.Extensibility.Data.ILibraryContext.Localizations">
            <summary>
            Collection of localization files to use in the library.
            </summary>
        </member>
        <member name="P:WixToolset.Extensibility.Data.ILibraryContext.IntermediateFolder">
            <summary>
            Intermediate folder.
            </summary>
        </member>
        <member name="P:WixToolset.Extensibility.Data.ILibraryContext.Intermediates">
            <summary>
            Collection of intermediates to include in the library.
            </summary>
        </member>
        <member name="P:WixToolset.Extensibility.Data.ILibraryContext.OutputPath">
            <summary>
            Output path.
            </summary>
        </member>
        <member name="P:WixToolset.Extensibility.Data.ILibraryContext.CancellationToken">
            <summary>
            Cancellation token.
            </summary>
        </member>
        <member name="T:WixToolset.Extensibility.Data.ILibraryResult">
            <summary>
            Result of a library combine operation.
            </summary>
        </member>
        <member name="P:WixToolset.Extensibility.Data.ILibraryResult.TrackedFiles">
            <summary>
            Collection of files tracked when binding files into the library.
            </summary>
        </member>
        <member name="P:WixToolset.Extensibility.Data.ILibraryResult.Library">
            <summary>
            Output of librarian.
            </summary>
        </member>
        <member name="T:WixToolset.Extensibility.Data.ILinkContext">
            <summary>
            Context provided during linking.
            </summary>
        </member>
        <member name="P:WixToolset.Extensibility.Data.ILinkContext.ServiceProvider">
            <summary>
            Service provider.
            </summary>
        </member>
        <member name="P:WixToolset.Extensibility.Data.ILinkContext.Extensions">
            <summary>
            Collection of extensions to use during linking.
            </summary>
        </member>
        <member name="P:WixToolset.Extensibility.Data.ILinkContext.ExtensionData">
            <summary>
            Collection of extension data to use during linking.
            </summary>
        </member>
        <member name="P:WixToolset.Extensibility.Data.ILinkContext.ExpectedOutputType">
            <summary>
            Expected output type.
            </summary>
        </member>
        <member name="P:WixToolset.Extensibility.Data.ILinkContext.IntermediateFolder">
            <summary>
            Intermediate folder.
            </summary>
        </member>
        <member name="P:WixToolset.Extensibility.Data.ILinkContext.Intermediates">
            <summary>
            Collection of intermediates to link.
            </summary>
        </member>
        <member name="P:WixToolset.Extensibility.Data.ILinkContext.OutputPath">
            <summary>
            Output path.
            </summary>
        </member>
        <member name="P:WixToolset.Extensibility.Data.ILinkContext.Platform">
            <summary>
            Gets or sets the platform for the output.
            </summary>
        </member>
        <member name="P:WixToolset.Extensibility.Data.ILinkContext.SkipStdWixlib">
            <summary>
            Gets or sets whether to skip the standard wixlib.
            </summary>
        </member>
        <member name="P:WixToolset.Extensibility.Data.ILinkContext.SymbolDefinitionCreator">
            <summary>
            Symbol definition creator used to load extension data.
            </summary>
        </member>
        <member name="P:WixToolset.Extensibility.Data.ILinkContext.CancellationToken">
            <summary>
            Cancellation token.
            </summary>
        </member>
        <member name="T:WixToolset.Extensibility.Data.IOptimizeContext">
            <summary>
            Context provided to the optimizer.
            </summary>
        </member>
        <member name="P:WixToolset.Extensibility.Data.IOptimizeContext.ServiceProvider">
            <summary>
            Service provider made available to the optimizer and its extensions.
            </summary>
        </member>
        <member name="P:WixToolset.Extensibility.Data.IOptimizeContext.Extensions">
            <summary>
            Set of extensions provided to the optimizer.
            </summary>
        </member>
        <member name="P:WixToolset.Extensibility.Data.IOptimizeContext.IntermediateFolder">
            <summary>
            Intermediate folder.
            </summary>
        </member>
        <member name="P:WixToolset.Extensibility.Data.IOptimizeContext.BindPaths">
            <summary>
            Collection of bindpaths used to bind files.
            </summary>
        </member>
        <member name="P:WixToolset.Extensibility.Data.IOptimizeContext.BindVariables">
            <summary>
            Bind variables used during optimization.
            </summary>
        </member>
        <member name="P:WixToolset.Extensibility.Data.IOptimizeContext.Platform">
            <summary>
            Gets or sets the platform which the optimizer will use when defaulting 64-bit symbol properties.
            </summary>
            <value>The platform which the optimizer will use when defaulting 64-bit symbol properties.</value>
        </member>
        <member name="P:WixToolset.Extensibility.Data.IOptimizeContext.Intermediates">
            <summary>
            Collection of intermediates to optimize.
            </summary>
        </member>
        <member name="P:WixToolset.Extensibility.Data.IOptimizeContext.Localizations">
            <summary>
            Collection of localization files to use in the optimizer.
            </summary>
        </member>
        <member name="P:WixToolset.Extensibility.Data.IOptimizeContext.CancellationToken">
            <summary>
            Cancellation token.
            </summary>
        </member>
        <member name="T:WixToolset.Extensibility.Data.IPreprocessContext">
            <summary>
            Preprocessor context.
            </summary>
        </member>
        <member name="P:WixToolset.Extensibility.Data.IPreprocessContext.ServiceProvider">
            <summary>
            Service provider.
            </summary>
        </member>
        <member name="P:WixToolset.Extensibility.Data.IPreprocessContext.Extensions">
            <summary>
            Collection of extensions to use during preprocessing.
            </summary>
        </member>
        <member name="P:WixToolset.Extensibility.Data.IPreprocessContext.IncludeSearchPaths">
            <summary>
            Collection of search paths to find include files.
            </summary>
        </member>
        <member name="P:WixToolset.Extensibility.Data.IPreprocessContext.IntermediateFolder">
            <summary>
            Intermediate folder.
            </summary>
        </member>
        <member name="P:WixToolset.Extensibility.Data.IPreprocessContext.OutputPath">
            <summary>
            Output path.
            </summary>
        </member>
        <member name="P:WixToolset.Extensibility.Data.IPreprocessContext.Platform">
            <summary>
            Gets the platform which the compiler will use when defaulting 64-bit attributes and elements.
            </summary>
            <value>The platform which the compiler will use when defaulting 64-bit attributes and elements.</value>
        </member>
        <member name="P:WixToolset.Extensibility.Data.IPreprocessContext.SourcePath">
            <summary>
            Path to the source file being preprocessed.
            </summary>
        </member>
        <member name="P:WixToolset.Extensibility.Data.IPreprocessContext.Variables">
            <summary>
            Collection of name/value pairs used as preprocessor variables.
            </summary>
        </member>
        <member name="P:WixToolset.Extensibility.Data.IPreprocessContext.CurrentSourceLineNumber">
            <summary>
            Current source line number of the preprocessor.
            </summary>
        </member>
        <member name="P:WixToolset.Extensibility.Data.IPreprocessContext.CancellationToken">
            <summary>
            Cancellation token.
            </summary>
        </member>
        <member name="T:WixToolset.Extensibility.Data.IPreprocessResult">
            <summary>
            Result of preprocessing.
            </summary>
        </member>
        <member name="P:WixToolset.Extensibility.Data.IPreprocessResult.Document">
            <summary>
            Document result of preprocessor.
            </summary>
        </member>
        <member name="P:WixToolset.Extensibility.Data.IPreprocessResult.IncludedFiles">
            <summary>
            Collection of files included during preprocessing.
            </summary>
        </member>
        <member name="T:WixToolset.Extensibility.Data.IResolveContext">
            <summary>
            Context for resolve.
            </summary>
        </member>
        <member name="P:WixToolset.Extensibility.Data.IResolveContext.ServiceProvider">
            <summary>
            Service provider.
            </summary>
        </member>
        <member name="P:WixToolset.Extensibility.Data.IResolveContext.BindPaths">
            <summary>
            Bind paths used during resolution.
            </summary>
        </member>
        <member name="P:WixToolset.Extensibility.Data.IResolveContext.BindVariables">
            <summary>
            Bind variables used during resolution.
            </summary>
        </member>
        <member name="P:WixToolset.Extensibility.Data.IResolveContext.Extensions">
            <summary>
            Resolve extensions.
            </summary>
        </member>
        <member name="P:WixToolset.Extensibility.Data.IResolveContext.ExtensionData">
            <summary>
            Extension data.
            </summary>
        </member>
        <member name="P:WixToolset.Extensibility.Data.IResolveContext.FilterCultures">
            <summary>
            List of cultures to filter the localizations.
            </summary>
        </member>
        <member name="P:WixToolset.Extensibility.Data.IResolveContext.IntermediateFolder">
            <summary>
            Intermediate folder.
            </summary>
        </member>
        <member name="P:WixToolset.Extensibility.Data.IResolveContext.IntermediateRepresentation">
            <summary>
            Intermediate to resolve.
            </summary>
        </member>
        <member name="P:WixToolset.Extensibility.Data.IResolveContext.Localizations">
            <summary>
            Localizations used to resolve.
            </summary>
        </member>
        <member name="P:WixToolset.Extensibility.Data.IResolveContext.AllowUnresolvedVariables">
            <summary>
            Indicates whether to allow localization and bind variables to remain unresolved.
            </summary>
        </member>
        <member name="P:WixToolset.Extensibility.Data.IResolveContext.OutputPath">
            <summary>
            Output path.
            </summary>
        </member>
        <member name="P:WixToolset.Extensibility.Data.IResolveContext.CancellationToken">
            <summary>
            Cancellation token.
            </summary>
        </member>
        <member name="T:WixToolset.Extensibility.Data.IResolvedDirectory">
            <summary>
            Used for resolved directory information.
            </summary>
        </member>
        <member name="P:WixToolset.Extensibility.Data.IResolvedDirectory.DirectoryParent">
            <summary>The directory parent.</summary>
        </member>
        <member name="P:WixToolset.Extensibility.Data.IResolvedDirectory.Name">
            <summary>The name of this directory.</summary>
        </member>
        <member name="P:WixToolset.Extensibility.Data.IResolvedDirectory.Path">
            <summary>The path of this directory.</summary>
        </member>
        <member name="T:WixToolset.Extensibility.Data.IResolveFileResult">
            <summary>
            Result of resolving a file.
            </summary>
        </member>
        <member name="P:WixToolset.Extensibility.Data.IResolveFileResult.CheckedPaths">
            <summary>
            Collection of paths checked to find file.
            </summary>
        </member>
        <member name="P:WixToolset.Extensibility.Data.IResolveFileResult.Path">
            <summary>
            Path to found file, if found.
            </summary>
        </member>
        <member name="T:WixToolset.Extensibility.Data.IResolveResult">
            <summary>
            Result of resolving localization and bind variables.
            </summary>
        </member>
        <member name="P:WixToolset.Extensibility.Data.IResolveResult.Codepage">
            <summary>
            Resolved codepage, if provided.
            </summary>
        </member>
        <member name="P:WixToolset.Extensibility.Data.IResolveResult.SummaryInformationCodepage">
            <summary>
            Resolved summary information codepage, if provided.
            </summary>
        </member>
        <member name="P:WixToolset.Extensibility.Data.IResolveResult.PackageLcid">
            <summary>
            Resolved package language, if provided.
            </summary>
        </member>
        <member name="P:WixToolset.Extensibility.Data.IResolveResult.DelayedFields">
            <summary>
            Fields still requiring resolution.
            </summary>
        </member>
        <member name="P:WixToolset.Extensibility.Data.IResolveResult.ExpectedEmbeddedFiles">
            <summary>
            Files to extract from embedded .wixlibs.
            </summary>
        </member>
        <member name="P:WixToolset.Extensibility.Data.IResolveResult.IntermediateRepresentation">
            <summary>
            Resolved intermediate.
            </summary>
        </member>
        <member name="T:WixToolset.Extensibility.Data.ITrackedFile">
            <summary>
            Interface used to track all files processed.
            </summary>
        </member>
        <member name="P:WixToolset.Extensibility.Data.ITrackedFile.Path">
            <summary>
            Path to tracked file.
            </summary>
        </member>
        <member name="P:WixToolset.Extensibility.Data.ITrackedFile.SourceLineNumbers">
            <summary>
            Optional source line numbers where the tracked file was created.
            </summary>
        </member>
        <member name="P:WixToolset.Extensibility.Data.ITrackedFile.Type">
            <summary>
            Type of tracked file.
            </summary>
        </member>
        <member name="T:WixToolset.Extensibility.Data.IWindowsInstallerDecompileContext">
            <summary>
            The context used to decompile a Windows Installer database.
            </summary>
        </member>
        <member name="P:WixToolset.Extensibility.Data.IWindowsInstallerDecompileContext.ServiceProvider">
            <summary>
            Gets or sets the service provider.
            </summary>
        </member>
        <member name="P:WixToolset.Extensibility.Data.IWindowsInstallerDecompileContext.DecompilePath">
            <summary>
            Gets or sets the path to the file to decompile.
            </summary>
        </member>
        <member name="P:WixToolset.Extensibility.Data.IWindowsInstallerDecompileContext.DecompileType">
            <summary>
            Gets or sets the type to decompile.
            </summary>
        </member>
        <member name="P:WixToolset.Extensibility.Data.IWindowsInstallerDecompileContext.Extensions">
            <summary>
            Gets or sets the decompiler extensions.
            </summary>
        </member>
        <member name="P:WixToolset.Extensibility.Data.IWindowsInstallerDecompileContext.ExtensionData">
            <summary>
            Collection of extension data to use during decompiling.
            </summary>
        </member>
        <member name="P:WixToolset.Extensibility.Data.IWindowsInstallerDecompileContext.SymbolDefinitionCreator">
            <summary>
            Symbol definition creator used to load extension data.
            </summary>
        </member>
        <member name="P:WixToolset.Extensibility.Data.IWindowsInstallerDecompileContext.ExtractFolder">
            <summary>
            Gets or sets the folder where content is extracted.
            </summary>
        </member>
        <member name="P:WixToolset.Extensibility.Data.IWindowsInstallerDecompileContext.CabinetExtractFolder">
            <summary>
            Gets or sets the folder where files are extracted.
            </summary>
        </member>
        <member name="P:WixToolset.Extensibility.Data.IWindowsInstallerDecompileContext.BaseSourcePath">
            <summary>
            Optional gets or sets the base path for the File/@Source.
            </summary>
            <remarks>Default value is "SourceDir" to enable use of BindPaths.</remarks>
        </member>
        <member name="P:WixToolset.Extensibility.Data.IWindowsInstallerDecompileContext.IntermediateFolder">
            <summary>
            Gets or sets the intermediate folder.
            </summary>
        </member>
        <member name="P:WixToolset.Extensibility.Data.IWindowsInstallerDecompileContext.OutputPath">
            <summary>
            Gets or sets where to output the result.
            </summary>
        </member>
        <member name="P:WixToolset.Extensibility.Data.IWindowsInstallerDecompileContext.SuppressCustomTables">
            <summary>
            Gets or sets the option to suppress custom tables.
            </summary>
        </member>
        <member name="P:WixToolset.Extensibility.Data.IWindowsInstallerDecompileContext.SuppressDroppingEmptyTables">
            <summary>
            Gets or sets the option to suppress dropping empty tables.
            </summary>
        </member>
        <member name="P:WixToolset.Extensibility.Data.IWindowsInstallerDecompileContext.SuppressExtractCabinets">
            <summary>
            Gets or sets whether to prevent extract cabinets.
            </summary>
        </member>
        <member name="P:WixToolset.Extensibility.Data.IWindowsInstallerDecompileContext.SuppressRelativeActionSequencing">
            <summary>
            Gets or sets whether to suppress relative action sequencing.
            </summary>
        </member>
        <member name="P:WixToolset.Extensibility.Data.IWindowsInstallerDecompileContext.SuppressUI">
            <summary>
            Gets or sets the option to suppress decompiling UI-related tables.
            </summary>
        </member>
        <member name="P:WixToolset.Extensibility.Data.IWindowsInstallerDecompileContext.KeepModularizationIds">
            <summary>
            Gets or sets whether the decompiler should keep modularization
            GUIDs (true) or remove them (default/false).
            </summary>
        </member>
        <member name="T:WixToolset.Extensibility.Data.IWindowsInstallerDecompileResult">
            <summary>
            The result from decompiling a Windows Installer database.
            </summary>
        </member>
        <member name="P:WixToolset.Extensibility.Data.IWindowsInstallerDecompileResult.Data">
            <summary>
            Decompiled <c>WindowsInstallerData</c>.
            </summary>
        </member>
        <member name="P:WixToolset.Extensibility.Data.IWindowsInstallerDecompileResult.Document">
            <summary>
            Decompiled document.
            </summary>
        </member>
        <member name="P:WixToolset.Extensibility.Data.IWindowsInstallerDecompileResult.ExtractedFilePaths">
            <summary>
            Extracted paths.
            </summary>
        </member>
        <member name="P:WixToolset.Extensibility.Data.IWindowsInstallerDecompileResult.Platform">
            <summary>
            Decompiled platform.
            </summary>
        </member>
        <member name="T:WixToolset.Extensibility.Data.PossibleKeyPathType">
            <summary>
            Key path types.
            </summary>
        </member>
        <member name="F:WixToolset.Extensibility.Data.PossibleKeyPathType.None">
            <summary>
            Not a key path.
            </summary>
        </member>
        <member name="F:WixToolset.Extensibility.Data.PossibleKeyPathType.File">
            <summary>
            File resource as a key path.
            </summary>
        </member>
        <member name="F:WixToolset.Extensibility.Data.PossibleKeyPathType.Directory">
            <summary>
            Folder as a key path.
            </summary>
        </member>
        <member name="F:WixToolset.Extensibility.Data.PossibleKeyPathType.OdbcDataSource">
            <summary>
            ODBC data source as a key path.
            </summary>
        </member>
        <member name="F:WixToolset.Extensibility.Data.PossibleKeyPathType.Registry">
            <summary>
            A simple registry key acting as a key path.
            </summary>
        </member>
        <member name="F:WixToolset.Extensibility.Data.PossibleKeyPathType.RegistryFormatted">
            <summary>
            A registry key that contains a formatted property acting as a key path.
            </summary>
        </member>
        <member name="T:WixToolset.Extensibility.Data.TrackedFileType">
            <summary>
            Tracked file types.
            </summary>
        </member>
        <member name="F:WixToolset.Extensibility.Data.TrackedFileType.Input">
            <summary>
            File tracked as input (like content included in an .msi).
            </summary>
        </member>
        <member name="F:WixToolset.Extensibility.Data.TrackedFileType.Temporary">
            <summary>
            Temporary file (like an .idt or any other temporary file).
            These are to be deleted before the build completes.
            </summary>
        </member>
        <member name="F:WixToolset.Extensibility.Data.TrackedFileType.Intermediate">
            <summary>
            Intermediate file (like a .cab in the cabcache).
            These are left for subsequent builds.
            </summary>
        </member>
        <member name="F:WixToolset.Extensibility.Data.TrackedFileType.BuiltContentOutput">
            <summary>
            Output created by the build process itself (like a .cab).
            These files can be recreated in the final output location by building again.
            </summary>
        </member>
        <member name="F:WixToolset.Extensibility.Data.TrackedFileType.BuiltTargetOutput">
            <summary>
            Target output created by the build process itself (like a .msi, .msm, .wixlib, .exe).
            These files can be recreated in the final output location by building again.
            </summary>
        </member>
        <member name="F:WixToolset.Extensibility.Data.TrackedFileType.BuiltPdbOutput">
            <summary>
            Output pdb created by the build process itself (like a .wixpdb).
            These files can be recreated in the final output location by building again.
            </summary>
        </member>
        <member name="F:WixToolset.Extensibility.Data.TrackedFileType.CopiedOutput">
            <summary>
            Output copied by the build process (like external files in an .msi).
            These files are not created by the build process but are copied to the final output location.
            </summary>
        </member>
        <member name="T:WixToolset.Extensibility.DecompilerConstants">
            <summary>
            Constants used by decompiler.
            </summary>
        </member>
        <member name="F:WixToolset.Extensibility.DecompilerConstants.PrimaryKeyDelimiter">
            <summary>
            
            </summary>
        </member>
        <member name="F:WixToolset.Extensibility.DecompilerConstants.PrimaryKeyDelimiterString">
            <summary>
            
            </summary>
        </member>
        <member name="T:WixToolset.Extensibility.IBackend">
            <summary>
            Interface all backends implement.
            </summary>
        </member>
        <member name="M:WixToolset.Extensibility.IBackend.Bind(WixToolset.Extensibility.Data.IBindContext)">
            <summary>
            Bind the intermediate into the final output.
            </summary>
            <param name="context">Bind context.</param>
            <returns>Result of the bind operation.</returns>
        </member>
        <member name="T:WixToolset.Extensibility.IBackendFactory">
            <summary>
            Implemented by extensions that are backends.
            </summary>
        </member>
        <member name="M:WixToolset.Extensibility.IBackendFactory.TryCreateBackend(System.String,System.String,WixToolset.Extensibility.IBackend@)">
            <summary>
            Called to find the backend used to produce the requested output type.
            </summary>
            <param name="outputType">Type of output being created.</param>
            <param name="outputPath">Path to the output to create.</param>
            <param name="binder">The backend for the output.</param>
            <returns>True if the backend was created, otherwise false.</returns>
        </member>
        <member name="T:WixToolset.Extensibility.IBinderExtension">
            <summary>
            Interface all binder extensions implement.
            </summary>
        </member>
        <member name="M:WixToolset.Extensibility.IBinderExtension.PreBind(WixToolset.Extensibility.Data.IBindContext)">
            <summary>
            Called before binding occurs.
            </summary>
        </member>
        <member name="M:WixToolset.Extensibility.IBinderExtension.PostBind(WixToolset.Extensibility.Data.IBindResult)">
            <summary>
            Called after all binding occurs.
            </summary>
        </member>
        <member name="T:WixToolset.Extensibility.IBurnBackendBinderExtension">
            <summary>
            Interface all Burn backend extensions implement.
            </summary>
        </member>
        <member name="M:WixToolset.Extensibility.IBurnBackendBinderExtension.PreBackendBind(WixToolset.Extensibility.Data.IBindContext)">
            <summary>
            Called before binding occurs.
            </summary>
        </member>
        <member name="M:WixToolset.Extensibility.IBurnBackendBinderExtension.ResolveRelatedFile(System.String,System.String,System.String,WixToolset.Data.SourceLineNumber)">
            <summary>
            Called to find a file related to another source in the authoring. For example, most often used
            to find cabinets and uncompressed files for an MSI package.
            </summary>
            <param name="source">Path to the source package.</param>
            <param name="relatedSource">Expected path to the related file.</param>
            <param name="type">Type of related file, such as "File" or "Cabinet"</param>
            <param name="sourceLineNumbers">Source line number of source package.</param>
            <returns><c>IResolveFileResult</c> if the related file was found, or null for default handling.</returns>
        </member>
        <member name="M:WixToolset.Extensibility.IBurnBackendBinderExtension.SymbolsFinalized(WixToolset.Data.IntermediateSection)">
            <summary>
            Called right before the output is bound into its final format.
            </summary>
            <param name="section">The finalized intermediate section.</param>
        </member>
        <member name="M:WixToolset.Extensibility.IBurnBackendBinderExtension.ResolveUrl(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Called to customize the DownloadUrl provided in source cde.
            </summary>
            <param name="url">The value from the source code. May not actually be a URL.</param>
            <param name="fallbackUrl">The default URL if the extension does not return a value.</param>
            <param name="packageId">Identifier of the package.</param>
            <param name="payloadId">Identifier of the payload.</param>
            <param name="fileName">Filename of the payload.</param>
            <returns>Url to override, or null to use default value.</returns>
        </member>
        <member name="M:WixToolset.Extensibility.IBurnBackendBinderExtension.TryProcessSymbol(WixToolset.Data.IntermediateSection,WixToolset.Data.IntermediateSymbol)">
            <summary>
            Called for each extension symbol that hasn't been handled yet.
            Use IBurnBackendHelper to add data.
            </summary>
            <param name="section">The linked section.</param>
            <param name="symbol">The current symbol.</param>
            <returns>
            True if the extension handled the symbol, false otherwise.
            The Burn backend will warn on all unhandled symbols.
            </returns>
        </member>
        <member name="M:WixToolset.Extensibility.IBurnBackendBinderExtension.PostBackendBind(WixToolset.Extensibility.Data.IBindResult)">
            <summary>
            Called after output is bound into its final format.
            </summary>
            <param name="result"></param>
        </member>
        <member name="T:WixToolset.Extensibility.ICompilerExtension">
            <summary>
            Interface all compiler extensions implement.
            </summary>
        </member>
        <member name="P:WixToolset.Extensibility.ICompilerExtension.Namespace">
            <summary>
            Gets the schema namespace for this extension.
            </summary>
            <value>Schema namespace supported by this extension.</value>
        </member>
        <member name="M:WixToolset.Extensibility.ICompilerExtension.PreCompile(WixToolset.Extensibility.Data.ICompileContext)">
            <summary>
            Called at the beginning of the compilation of a source file.
            </summary>
        </member>
        <member name="M:WixToolset.Extensibility.ICompilerExtension.ParseAttribute(WixToolset.Data.Intermediate,WixToolset.Data.IntermediateSection,System.Xml.Linq.XElement,System.Xml.Linq.XAttribute,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Processes an attribute for the Compiler.
            </summary>
            <param name="intermediate">Parent intermediate.</param>
            <param name="section">Parent section.</param>
            <param name="parentElement">Parent element of attribute.</param>
            <param name="attribute">Attribute to process.</param>
            <param name="context">Extra information about the context in which this element is being parsed.</param>
        </member>
        <member name="M:WixToolset.Extensibility.ICompilerExtension.ParseElement(WixToolset.Data.Intermediate,WixToolset.Data.IntermediateSection,System.Xml.Linq.XElement,System.Xml.Linq.XElement,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Processes an element for the Compiler.
            </summary>
            <param name="intermediate">Parent intermediate.</param>
            <param name="section">Parent section.</param>
            <param name="parentElement">Parent element of element to process.</param>
            <param name="element">Element to process.</param>
            <param name="context">Extra information about the context in which this element is being parsed.</param>
        </member>
        <member name="M:WixToolset.Extensibility.ICompilerExtension.ParsePossibleKeyPathElement(WixToolset.Data.Intermediate,WixToolset.Data.IntermediateSection,System.Xml.Linq.XElement,System.Xml.Linq.XElement,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Processes an element for the Compiler, with the ability to supply a component keypath.
            </summary>
            <param name="intermediate">Parent intermediate.</param>
            <param name="section">Parent section.</param>
            <param name="parentElement">Parent element of element to process.</param>
            <param name="element">Element to process.</param>
            <param name="context">Extra information about the context in which this element is being parsed.</param>
        </member>
        <member name="M:WixToolset.Extensibility.ICompilerExtension.PostCompile(WixToolset.Data.Intermediate)">
            <summary>
            Called at the end of the compilation of a source file.
            </summary>
        </member>
        <member name="T:WixToolset.Extensibility.IExtensionCommandLine">
            <summary>
            Interface extensions implement to be able to parse the command-line.
            </summary>
        </member>
        <member name="M:WixToolset.Extensibility.IExtensionCommandLine.GetCommandLineHelp">
            <summary>
            Gets the help for this extension.
            </summary>
        </member>
        <member name="M:WixToolset.Extensibility.IExtensionCommandLine.PreParse(WixToolset.Extensibility.Data.ICommandLineContext)">
            <summary>
            Called before the command-line is parsed.
            </summary>
            <param name="context">Information about the command-line to be parsed.</param>
        </member>
        <member name="M:WixToolset.Extensibility.IExtensionCommandLine.TryParseArgument(WixToolset.Extensibility.Services.ICommandLineParser,System.String)">
            <summary>
            Gives the extension an opportunity pass a command-line argument for another command.
            </summary>
            <param name="parser">Parser to help parse the argument and additional arguments.</param>
            <param name="argument">Argument to parse.</param>
            <returns>True if the argument is recognized; otherwise false to allow another extension to process it.</returns>
        </member>
        <member name="M:WixToolset.Extensibility.IExtensionCommandLine.TryParseCommand(WixToolset.Extensibility.Services.ICommandLineParser,System.String,WixToolset.Extensibility.Data.ICommandLineCommand@)">
            <summary>
            Gives the extension an opportunity to provide a command.
            </summary>
            <param name="parser">Parser to help parse the argument and additional arguments.</param>
            <param name="argument">Argument to parse.</param>
            <param name="command"></param>
            <returns>True if the argument is recognized as a command; otherwise false to allow another extension to process it.</returns>
        </member>
        <member name="M:WixToolset.Extensibility.IExtensionCommandLine.PostParse">
            <summary>
            Called after the command-line is parsed.
            </summary>
        </member>
        <member name="T:WixToolset.Extensibility.IExtensionData">
            <summary>
            Interface extensions implement to provide data.
            </summary>
        </member>
        <member name="M:WixToolset.Extensibility.IExtensionData.TryGetSymbolDefinitionByName(System.String,WixToolset.Data.IntermediateSymbolDefinition@)">
             <summary>
            
             </summary>
             <param name="name"></param>
             <param name="symbolDefinition"></param>
             <returns>True </returns>
        </member>
        <member name="M:WixToolset.Extensibility.IExtensionData.GetLibrary(WixToolset.Data.ISymbolDefinitionCreator)">
            <summary>
            Gets the library associated with this extension.
            </summary>
            <param name="symbolDefinitions">The symbol definitions to use while loading the library.</param>
            <returns>The library for this extension or null if there is no library.</returns>
        </member>
        <member name="T:WixToolset.Extensibility.IExtensionFactory">
            <summary>
            Implementations may request an IWixToolsetCoreServiceProvider at instantiation by having a single parameter constructor for it.
            </summary>
        </member>
        <member name="M:WixToolset.Extensibility.IExtensionFactory.TryCreateExtension(System.Type,System.Object@)">
            <summary>
            Request to create an extension of the specified type.
            </summary>
            <param name="extensionType">Extension type to create.</param>
            <param name="extension">Extension created.</param>
            <returns>True if extension was created; otherwise false.</returns>
        </member>
        <member name="T:WixToolset.Extensibility.IFileSystemExtension">
            <summary>
            Interface all file system extensions implement.
            </summary>
        </member>
        <member name="T:WixToolset.Extensibility.ILayoutExtension">
            <summary>
            Interface all layout extensions implement.
            </summary>
        </member>
        <member name="M:WixToolset.Extensibility.ILayoutExtension.PreLayout(WixToolset.Extensibility.Data.ILayoutContext)">
            <summary>
            Called before layout occurs.
            </summary>
        </member>
        <member name="M:WixToolset.Extensibility.ILayoutExtension.PostLayout">
            <summary>
            Called after all layout occurs.
            </summary>
        </member>
        <member name="T:WixToolset.Extensibility.ILibrarianExtension">
            <summary>
            Interface all librarian extensions implement.
            </summary>
        </member>
        <member name="M:WixToolset.Extensibility.ILibrarianExtension.PreCombine(WixToolset.Extensibility.Data.ILibraryContext)">
            <summary>
            Called at the beginning of combining.
            </summary>
            <param name="context">Librarian context.</param>
        </member>
        <member name="M:WixToolset.Extensibility.ILibrarianExtension.ResolveFile(WixToolset.Data.SourceLineNumber,WixToolset.Data.IntermediateSymbolDefinition,System.String)">
            <summary>
            Resolves a path to a file path on disk.
            </summary>
            <param name="sourceLineNumber">Source line number for the path to resolve.</param>
            <param name="symbolDefinition">Symbol related to the path to resolve.</param>
            <param name="path">Path to resolve.</param>
            <returns>Optional resolved file result.</returns>
        </member>
        <member name="M:WixToolset.Extensibility.ILibrarianExtension.PostCombine(WixToolset.Extensibility.Data.ILibraryResult)">
            <summary>
            Called at the end of combining.
            </summary>
            <param name="result">Combined library result.</param>
        </member>
        <member name="T:WixToolset.Extensibility.ILinkerExtension">
            <summary>
            Interface all linker extensions implement.
            </summary>
        </member>
        <member name="M:WixToolset.Extensibility.ILinkerExtension.PreLink(WixToolset.Extensibility.Data.ILinkContext)">
            <summary>
            Called before linking occurs.
            </summary>
        </member>
        <member name="M:WixToolset.Extensibility.ILinkerExtension.PostLink(WixToolset.Data.Intermediate)">
            <summary>
            Called after all linking occurs.
            </summary>
        </member>
        <member name="T:WixToolset.Extensibility.IMessageListener">
            <summary>
            Message listener.
            </summary>
        </member>
        <member name="M:WixToolset.Extensibility.IMessageListener.CalculateMessageLevel(WixToolset.Extensibility.Services.IMessaging,WixToolset.Data.Message,WixToolset.Data.MessageLevel)">
            <summary>
            Calculate a new level for a message.
            </summary>
            <param name="messaging">Messaging object.</param>
            <param name="message">Message to evaluate.</param>
            <param name="defaultMessageLevel">Current message level.</param>
            <returns></returns>
        </member>
        <member name="M:WixToolset.Extensibility.IMessageListener.Write(WixToolset.Data.Message)">
            <summary>
            Writes a message.
            </summary>
            <param name="message">Message to write.</param>
        </member>
        <member name="M:WixToolset.Extensibility.IMessageListener.Write(System.String)">
            <summary>
            Writes a string message.
            </summary>
            <param name="message">String message to write.</param>
        </member>
        <member name="T:WixToolset.Extensibility.IOptimizerExtension">
            <summary>
            Interface that all optimizer extensions implement.
            </summary>
        </member>
        <member name="M:WixToolset.Extensibility.IOptimizerExtension.PreOptimize(WixToolset.Extensibility.Data.IOptimizeContext)">
            <summary>
            Called after all files have been compiled, before built-in optimizations, and before all sections are linked into a single section.
            </summary>
        </member>
        <member name="M:WixToolset.Extensibility.IOptimizerExtension.PostOptimize(WixToolset.Extensibility.Data.IOptimizeContext)">
            <summary>
            Called after all files have been compiled, after built-in optimizations, and before all sections are linked into a single section.
            </summary>
        </member>
        <member name="T:WixToolset.Extensibility.IPreprocessorExtension">
            <summary>
            Interface for extending the WiX toolset preprocessor.
            </summary>
        </member>
        <member name="P:WixToolset.Extensibility.IPreprocessorExtension.Prefixes">
            <summary>
            Gets the variable prefixes for the extension.
            </summary>
            <value>The variable prefixes for the extension.</value>
        </member>
        <member name="M:WixToolset.Extensibility.IPreprocessorExtension.PrePreprocess(WixToolset.Extensibility.Data.IPreprocessContext)">
            <summary>
            Called at the beginning of the preprocessing of a source file.
            </summary>
        </member>
        <member name="M:WixToolset.Extensibility.IPreprocessorExtension.GetVariableValue(System.String,System.String)">
            <summary>
            Gets the value of a variable whose prefix matches the extension.
            </summary>
            <param name="prefix">The prefix of the variable to be processed by the extension.</param>
            <param name="name">The name of the variable.</param>
            <returns>The value of the variable or null if the variable is undefined.</returns>
        </member>
        <member name="M:WixToolset.Extensibility.IPreprocessorExtension.EvaluateFunction(System.String,System.String,System.String[])">
            <summary>
            Evaluates a function defined in the extension.
            </summary>
            <param name="prefix">The prefix of the function to be processed by the extension.</param>
            <param name="function">The name of the function.</param>
            <param name="args">The list of arguments.</param>
            <returns>The value of the function or null if the function is not defined.</returns>
        </member>
        <member name="M:WixToolset.Extensibility.IPreprocessorExtension.ProcessPragma(System.String,System.String,System.String,System.Xml.Linq.XContainer)">
            <summary>
            Processes a pragma defined in the extension.
            </summary>
            <param name="prefix">The prefix of the pragma to be processed by the extension.</param>
            <param name="pragma">The name of the pragma.</param>
            <param name="args">The pragma's arguments.</param>
            <param name="parent">The parent node of the pragma.</param>
            <returns>false if the pragma is not defined.</returns>
            <comments>Don't return false for any condition except for unrecognized pragmas. Use Core.OnMessage for errors, warnings and messages.</comments>
        </member>
        <member name="M:WixToolset.Extensibility.IPreprocessorExtension.PostPreprocess(WixToolset.Extensibility.Data.IPreprocessResult)">
            <summary>
            Called at the end of the preprocessing of a source file.
            </summary>
        </member>
        <member name="T:WixToolset.Extensibility.IResolverExtension">
            <summary>
            Interface all resolver extensions implement.
            </summary>
        </member>
        <member name="M:WixToolset.Extensibility.IResolverExtension.PreResolve(WixToolset.Extensibility.Data.IResolveContext)">
            <summary>
            Called before resolving occurs.
            </summary>
        </member>
        <member name="M:WixToolset.Extensibility.IResolverExtension.ResolveFile(System.String,WixToolset.Data.IntermediateSymbolDefinition,WixToolset.Data.SourceLineNumber,WixToolset.Extensibility.Data.BindStage)">
            <summary>
            Called to attempt to resolve source to a file.
            </summary>
        </member>
        <member name="M:WixToolset.Extensibility.IResolverExtension.PostResolve(WixToolset.Extensibility.Data.IResolveResult)">
            <summary>
            Called after all resolving occurs.
            </summary>
        </member>
        <member name="T:WixToolset.Extensibility.IWindowsInstallerBackendBinderExtension">
            <summary>
            Interface all binder extensions implement.
            </summary>
        </member>
        <member name="P:WixToolset.Extensibility.IWindowsInstallerBackendBinderExtension.TableDefinitions">
            <summary>
            Table definitions provided by the extension.
            </summary>
        </member>
        <member name="M:WixToolset.Extensibility.IWindowsInstallerBackendBinderExtension.PreBackendBind(WixToolset.Extensibility.Data.IBindContext)">
            <summary>
            Called before binding occurs.
            </summary>
        </member>
        <member name="M:WixToolset.Extensibility.IWindowsInstallerBackendBinderExtension.SymbolsFinalized(WixToolset.Data.IntermediateSection)">
            <summary>
            Extension can process the intermediate before the Windows Installer data is created.
            </summary>
            <param name="section">The finalized intermediate section.</param>
        </member>
        <member name="M:WixToolset.Extensibility.IWindowsInstallerBackendBinderExtension.FinalizePatchFilterIds(WixToolset.Data.WindowsInstaller.WindowsInstallerData,System.Collections.Generic.IDictionary{WixToolset.Data.WindowsInstaller.Row,System.String},System.String)">
            <summary>
            Extension can process the filter ids applied to rows when processing patches.
            </summary>
            <param name="data">The <c>WindowsInstallerData</c> with rows to apply filters to.</param>
            <param name="rowToFilterId">The mapping that applies a filter id to a row.</param>
            <param name="filterIdPrefix">The prefix to use applying additional filters to rows.</param>
        </member>
        <member name="M:WixToolset.Extensibility.IWindowsInstallerBackendBinderExtension.ResolveCabinet(System.String,System.Collections.Generic.IEnumerable{WixToolset.Extensibility.Data.IBindFileWithPath})">
            <summary>
            Finds an existing cabinet that contains the provided files.
            </summary>
            <param name="cabinetPath">Path to the cabinet.</param>
            <param name="files">Files contained in the cabinet.</param>
            <returns>Resolved cabinet options or null if the cabinet could not be found.</returns>
        </member>
        <member name="M:WixToolset.Extensibility.IWindowsInstallerBackendBinderExtension.ResolveMedia(WixToolset.Data.Symbols.MediaSymbol,System.String,System.String)">
            <summary>
            Override layout location for a media.
            </summary>
            <param name="mediaSymbol">Media symbol.</param>
            <param name="mediaLayoutDirectory">Default media specific layout directory.</param>
            <param name="layoutDirectory">Default overall layout directory.</param>
            <returns>Layout location or null to use the default processing.</returns>
        </member>
        <member name="M:WixToolset.Extensibility.IWindowsInstallerBackendBinderExtension.TryProcessSymbol(WixToolset.Data.IntermediateSection,WixToolset.Data.IntermediateSymbol,WixToolset.Data.WindowsInstaller.WindowsInstallerData,WixToolset.Data.WindowsInstaller.TableDefinitionCollection)">
            <summary>
            Called for each extension symbol that hasn't been handled yet.
            </summary>
            <param name="section">The linked section.</param>
            <param name="symbol">The current symbol.</param>
            <param name="data">Windows Installer data </param>
            <param name="tableDefinitions">Collection of table definitions available for the output.</param>
            <returns>True if the symbol was handled, or false if not.</returns>
        </member>
        <member name="M:WixToolset.Extensibility.IWindowsInstallerBackendBinderExtension.PostBackendBind(WixToolset.Extensibility.Data.IBindResult)">
            <summary>
            Called after all output changes occur and right before the output is bound into its final format.
            </summary>
            <param name="result">Bind result to process.</param>
        </member>
        <member name="T:WixToolset.Extensibility.IWindowsInstallerDecompilerExtension">
            <summary>
            Interface all windows installer decompiler extensions implement.
            </summary>
        </member>
        <member name="P:WixToolset.Extensibility.IWindowsInstallerDecompilerExtension.TableDefinitions">
            <summary>
            Gets the table definitions this extension decompiles.
            </summary>
            <value>Table definitions this extension decompiles.</value>
        </member>
        <member name="M:WixToolset.Extensibility.IWindowsInstallerDecompilerExtension.PreDecompile(WixToolset.Extensibility.Data.IWindowsInstallerDecompileContext,WixToolset.Extensibility.Services.IWindowsInstallerDecompilerHelper)">
            <summary>
            Called before decompiling occurs.
            </summary>
            <param name="context">Decompile context.</param>
            <param name="helper">Decompile helper.</param>
        </member>
        <member name="M:WixToolset.Extensibility.IWindowsInstallerDecompilerExtension.PreDecompileTables(WixToolset.Data.WindowsInstaller.TableIndexedCollection)">
            <summary>
            Called before decompiling occurs.
            </summary>
            <param name="tables">The collection of all tables.</param>
        </member>
        <member name="M:WixToolset.Extensibility.IWindowsInstallerDecompilerExtension.TryDecompileTable(WixToolset.Data.WindowsInstaller.Table)">
            <summary>
            Try to decompile an extension table.
            </summary>
            <param name="table">The table to decompile.</param>
            <returns>True if the table was decompiled, false otherwise.</returns>
        </member>
        <member name="M:WixToolset.Extensibility.IWindowsInstallerDecompilerExtension.PostDecompileTables(WixToolset.Data.WindowsInstaller.TableIndexedCollection)">
            <summary>
            After decompilation tables.
            </summary>
            <param name="tables">The collection of all tables.</param>
        </member>
        <member name="M:WixToolset.Extensibility.IWindowsInstallerDecompilerExtension.PostDecompile(WixToolset.Extensibility.Data.IWindowsInstallerDecompileResult)">
            <summary>
            Called after all output changes occur and right before the output is bound into its final format.
            </summary>
        </member>
        <member name="T:WixToolset.Extensibility.Services.IBackendHelper">
            <summary>
            Interface provided to help backend extensions.
            </summary>
        </member>
        <member name="M:WixToolset.Extensibility.Services.IBackendHelper.CreateGuid">
            <summary>
            Creates a MSI compatible GUID.
            </summary>
            <returns>Creates an uppercase GUID with braces.</returns>
        </member>
        <member name="M:WixToolset.Extensibility.Services.IBackendHelper.CreateGuid(System.Guid,System.String)">
            <summary>
            Creates a version 3 name-based UUID.
            </summary>
            <param name="namespaceGuid">The namespace UUID.</param>
            <param name="value">The value.</param>
            <returns>The generated GUID for the given namespace and value.</returns>
        </member>
        <member name="M:WixToolset.Extensibility.Services.IBackendHelper.CreateResolvedDirectory(System.String,System.String)">
            <summary>
            Creates a resolved directory.
            </summary>
            <param name="directoryParent">Directory parent identifier.</param>
            <param name="name">Name of directory.</param>
            <returns>Resolved directory.</returns>
        </member>
        <member name="M:WixToolset.Extensibility.Services.IBackendHelper.ExtractEmbeddedFiles(System.Collections.Generic.IEnumerable{WixToolset.Extensibility.Data.IExpectedExtractFile})">
            <summary>
            Extracts embedded files.
            </summary>
            <param name="embeddedFiles">Embedded files to extract.</param>
            <returns><c>ITrackedFile</c> for each embedded file extracted.</returns>
        </member>
        <member name="M:WixToolset.Extensibility.Services.IBackendHelper.GenerateIdentifier(System.String,System.String[])">
            <summary>
            Generate an identifier by hashing data from the row.
            </summary>
            <param name="prefix">Three letter or less prefix for generated row identifier.</param>
            <param name="args">Information to hash.</param>
            <returns>The generated identifier.</returns>
        </member>
        <member name="M:WixToolset.Extensibility.Services.IBackendHelper.GetValidCodePage(System.String,System.Boolean,System.Boolean,WixToolset.Data.SourceLineNumber)">
            <summary>
            Gets a valid code page from the given web name or integer value.
            </summary>
            <param name="value">A code page web name or integer value as a string.</param>
            <param name="allowNoChange">Whether to allow -1 which does not change the database code pages. This may be the case with wxl files.</param>
            <param name="onlyAnsi">Whether to allow Unicode (UCS) or UTF code pages.</param>
            <param name="sourceLineNumbers">Source line information for the current authoring.</param>
            <returns>A valid code page number.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">The value is an integer less than 0 or greater than 65535.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="value"/> is null.</exception>
            <exception cref="T:System.NotSupportedException">The value doesn't not represent a valid code page name or integer value.</exception>
            <exception cref="T:WixToolset.Data.WixException">The code page is invalid for summary information.</exception>
        </member>
        <member name="M:WixToolset.Extensibility.Services.IBackendHelper.GetMsiFileName(System.String,System.Boolean,System.Boolean)">
            <summary>
            Get a source/target and short/long file name from an MSI Filename column.
            </summary>
            <param name="value">The Filename value.</param>
            <param name="source">true to get a source name; false to get a target name</param>
            <param name="longName">true to get a long name; false to get a short name</param>
            <returns>The requesed file name.</returns>
        </member>
        <member name="M:WixToolset.Extensibility.Services.IBackendHelper.IsValidBinderVariable(System.String)">
            <summary>
            Verifies if an identifier is a valid binder variable name.
            </summary>
            <param name="variable">Binder variable name to verify.</param>
            <returns>True if the identifier is a valid binder variable name.</returns>
        </member>
        <member name="M:WixToolset.Extensibility.Services.IBackendHelper.IsValidFourPartVersion(System.String)">
            <summary>
            Verifies the given string is a valid 4-part version.
            </summary>
            <param name="version">The version to verify.</param>
            <returns>True if version is a valid 4-part version.</returns>
        </member>
        <member name="M:WixToolset.Extensibility.Services.IBackendHelper.IsValidMsiProductVersion(System.String)">
            <summary>
            Verifies the given string is a valid MSI product version.
            </summary>
            <param name="version">The MSI product version to verify.</param>
            <returns>True if version is a valid MSI product version</returns>
        </member>
        <member name="M:WixToolset.Extensibility.Services.IBackendHelper.IsValidWixVersion(System.String)">
            <summary>
            Verifies the given string is a valid WiX version.
            </summary>
            <param name="version">The version to verify.</param>
            <returns>True if version is a valid WiX version.</returns>
        </member>
        <member name="M:WixToolset.Extensibility.Services.IBackendHelper.IsValidIdentifier(System.String)">
            <summary>
            Determines if value is a valid identifier.
            </summary>
            <param name="id">Identifier to validate.</param>
            <returns>True if valid identifier, otherwise false.</returns>
        </member>
        <member name="M:WixToolset.Extensibility.Services.IBackendHelper.IsValidLongFilename(System.String,System.Boolean,System.Boolean)">
            <summary>
            Verifies the given string is a valid long filename.
            </summary>
            <param name="filename">The filename to verify.</param>
            <param name="allowWildcards">Allow wildcards in the filename.</param>
            <param name="allowRelative">Allow long file name to be a relative path.</param>
            <returns>True if filename is a valid long filename.</returns>
        </member>
        <member name="M:WixToolset.Extensibility.Services.IBackendHelper.IsValidShortFilename(System.String,System.Boolean)">
            <summary>
            Verifies the given string is a valid short filename.
            </summary>
            <param name="filename">The filename to verify.</param>
            <param name="allowWildcards">Allow wildcards in the filename.</param>
            <returns>True if filename is a valid short filename.</returns>
        </member>
        <member name="M:WixToolset.Extensibility.Services.IBackendHelper.ResolveDelayedFields(System.Collections.Generic.IEnumerable{WixToolset.Extensibility.Data.IDelayedField},System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Resolve delayed fields.
            </summary>
            <param name="delayedFields">The fields which had resolution delayed.</param>
            <param name="variableCache">The cached variable values used when resolving delayed fields.</param>
        </member>
        <member name="M:WixToolset.Extensibility.Services.IBackendHelper.SplitMsiFileName(System.String)">
            <summary>
            Get the source/target and short/long file names from an MSI Filename column.
            </summary>
            <param name="value">The Filename value.</param>
            <returns>An array of strings of length 4. The contents are: short target, long target, short source, and long source.</returns>
            <remarks>
            If any particular file name part is not parsed, its set to null in the appropriate location of the returned array of strings.
            Thus the returned array will always be of length 4.
            </remarks>
        </member>
        <member name="M:WixToolset.Extensibility.Services.IBackendHelper.TryParseFourPartVersion(System.String,System.String@)">
            <summary>
            Tries to parse a version from the provided version string.
            </summary>
            <param name="version">The version to verify and parse.</param>
            <param name="parsedVersion">The parsed result if possible, otherwise null.</param>
            <returns>True if the version was able to parsed, otherwise false.</returns>
        </member>
        <member name="M:WixToolset.Extensibility.Services.IBackendHelper.TryParseMsiProductVersion(System.String,System.Boolean,System.String@)">
            <summary>
            Tries to parse an MSI product version from the provided version string.
            </summary>
            <param name="version">The version to verify and parse.</param>
            <param name="strict">Indicates whether to return a strict (255.255.65535) product version or any valid product version (255.255.65535.*).</param>
            <param name="parsedVersion">The parsed result if possible, otherwise null.</param>
            <returns>True if the version was able to parsed as an product version, otherwise false.</returns>
        </member>
        <member name="T:WixToolset.Extensibility.Services.IBundleValidator">
            <summary>
            Interface provided to help with bundle validation.
            </summary>
        </member>
        <member name="M:WixToolset.Extensibility.Services.IBundleValidator.GetCanonicalRelativePath(WixToolset.Data.SourceLineNumber,System.String,System.String,System.String)">
            <summary>
            Validates path is relative and canonicalizes it.
            For example, "a\..\c\.\d.exe" => "c\d.exe".
            </summary>
            <param name="sourceLineNumbers"></param>
            <param name="elementName"></param>
            <param name="attributeName"></param>
            <param name="relativePath"></param>
            <returns>The original value if not relative, otherwise the canonicalized relative path.</returns>
        </member>
        <member name="M:WixToolset.Extensibility.Services.IBundleValidator.ValidateBundleMsiPropertyName(WixToolset.Data.SourceLineNumber,System.String,System.String,System.String)">
            <summary>
            Validates an MsiProperty name value and displays an error for an illegal value.
            </summary>
            <param name="sourceLineNumbers"></param>
            <param name="elementName"></param>
            <param name="attributeName"></param>
            <param name="propertyName"></param>
            <returns>Whether the name is valid.</returns>
        </member>
        <member name="M:WixToolset.Extensibility.Services.IBundleValidator.ValidateBundleVariableNameDeclaration(WixToolset.Data.SourceLineNumber,System.String,System.String,System.String)">
            <summary>
            Validates a Bundle variable name that is being used to declare a Variable in the bundle manifest and displays an error for an illegal value.
            </summary>
            <param name="sourceLineNumbers"></param>
            <param name="elementName"></param>
            <param name="attributeName"></param>
            <param name="variableName"></param>
            <returns>Whether the name is valid.</returns>
        </member>
        <member name="M:WixToolset.Extensibility.Services.IBundleValidator.ValidateBundleVariableNameValue(WixToolset.Data.SourceLineNumber,System.String,System.String,System.String,WixToolset.Extensibility.Data.BundleVariableNameRule)">
            <summary>
            Validates a Bundle variable name that is being used to reference a Variable and displays an error for an illegal value.
            </summary>
            <param name="sourceLineNumbers"></param>
            <param name="elementName"></param>
            <param name="attributeName"></param>
            <param name="variableName"></param>
            <param name="nameRule"></param>
            <returns>Whether the name is valid.</returns>
        </member>
        <member name="M:WixToolset.Extensibility.Services.IBundleValidator.ValidateBundleVariableNameTarget(WixToolset.Data.SourceLineNumber,System.String,System.String,System.String)">
            <summary>
            Validates a Bundle variable name that is being used to set its value and displays an error for an illegal value.
            </summary>
            <param name="sourceLineNumbers"></param>
            <param name="elementName"></param>
            <param name="attributeName"></param>
            <param name="variableName"></param>
            <returns>Whether the name is valid.</returns>
        </member>
        <member name="M:WixToolset.Extensibility.Services.IBundleValidator.ValidateBundleCondition(WixToolset.Data.SourceLineNumber,System.String,System.String,System.String,WixToolset.Extensibility.Data.BundleConditionPhase)">
            <summary>
            Validates a bundle condition and displays an error for an illegal value.
            </summary>
            <param name="sourceLineNumbers"></param>
            <param name="elementName"></param>
            <param name="attributeName"></param>
            <param name="condition"></param>
            <param name="phase"></param>
            <returns>Whether the condition is valid.</returns>
        </member>
        <member name="T:WixToolset.Extensibility.Services.IBurnBackendHelper">
            <summary>
            Interface provided to help Burn backend extensions.
            </summary>
        </member>
        <member name="M:WixToolset.Extensibility.Services.IBurnBackendHelper.AddBootstrapperApplicationData(System.String)">
            <summary>
            Adds the given XML to the BootstrapperApplicationData manifest.
            </summary>
            <param name="xml">A valid XML fragment.</param>
        </member>
        <member name="M:WixToolset.Extensibility.Services.IBurnBackendHelper.AddBootstrapperApplicationData(WixToolset.Data.IntermediateSymbol,System.Boolean)">
            <summary>
            Adds an XML element for the given symbol to the BootstrapperApplicationData manifest.
            The symbol's name is used for the element's name.
            All of the symbol's fields are used for the element's attributes.
            </summary>
            <param name="symbol">The symbol to create the element from.</param>
            <param name="symbolIdIsIdAttribute">
            If true and the symbol has an Id,
            then an Id attribute is created with a value of the symbol's Id.
            </param>
        </member>
        <member name="M:WixToolset.Extensibility.Services.IBurnBackendHelper.AddBootstrapperExtensionData(System.String,System.String)">
            <summary>
            Adds the given XML to the BootstrapperExtensionData manifest for the given bundle extension.
            </summary>
            <param name="extensionId">The bundle extension's id.</param>
            <param name="xml">A valid XML fragment.</param>
        </member>
        <member name="M:WixToolset.Extensibility.Services.IBurnBackendHelper.AddBootstrapperExtensionData(System.String,WixToolset.Data.IntermediateSymbol,System.Boolean)">
            <summary>
            Adds an XML element for the given symbol to the BootstrapperExtensionData manifest for the given bundle extension.
            The symbol's name is used for the element's name.
            All of the symbol's fields are used for the element's attributes.
            </summary>
            <param name="extensionId">The bundle extension's id.</param>
            <param name="symbol">The symbol to create the element from.</param>
            <param name="symbolIdIsIdAttribute">
            If true and the symbol has an Id,
            then an Id attribute is created with a value of the symbol's Id.
            </param>
        </member>
        <member name="T:WixToolset.Extensibility.Services.ICommandLine">
            <summary>
            Command-line parsing mechanism.
            </summary>
        </member>
        <member name="M:WixToolset.Extensibility.Services.ICommandLine.CreateCommand(System.String[])">
            <summary>
            Simple way to parse arguments and create a command.
            </summary>
            <param name="args">Unparsed arguments.</param>
            <returns>Command if the command-line arguments can be parsed, otherwise null.</returns>
        </member>
        <member name="M:WixToolset.Extensibility.Services.ICommandLine.CreateCommand(System.String)">
            <summary>
            Simple way to parse arguments and create a command.
            </summary>
            <param name="commandLine">Unparsed arguments.</param>
            <returns>Command if the command-line arguments can be parsed, otherwise null.</returns>
        </member>
        <member name="M:WixToolset.Extensibility.Services.ICommandLine.ParseStandardCommandLine(WixToolset.Extensibility.Data.ICommandLineArguments)">
            <summary>
            Creates a command from populated arguments.
            </summary>
            <param name="arguments">Parsed arguments.</param>
            <returns>Command if the command-line arguments can be parsed, otherwise null.</returns>
        </member>
        <member name="T:WixToolset.Extensibility.Services.ICommandLineParser">
            <summary>
            Provides the command-line arguments.
            </summary>
        </member>
        <member name="P:WixToolset.Extensibility.Services.ICommandLineParser.ErrorArgument">
            <summary>
            Gets the argument that caused the error.
            </summary>
        </member>
        <member name="M:WixToolset.Extensibility.Services.ICommandLineParser.IsSwitch(System.String)">
            <summary>
            Validates that a valid switch (starts with "/" or "-"), and returns a bool indicating its validity
            </summary>
            <param name="argument">The string check.</param>
            <returns>True if a valid switch, otherwise false.</returns>
        </member>
        <member name="M:WixToolset.Extensibility.Services.ICommandLineParser.GetArgumentAsFilePathOrError(System.String,System.String)">
            <summary>
            Gets the current argument as a file or displays an error.
            </summary>
            <param name="argument">Current argument used in the error message if necessary.</param>
            <param name="fileType">Type of file displayed in the error message if necessary.</param>
            <returns>The fully expanded path if the argument is a file path, otherwise null.</returns>
        </member>
        <member name="M:WixToolset.Extensibility.Services.ICommandLineParser.GetArgumentAsFilePathOrError(System.String,System.String,System.Collections.Generic.IList{System.String})">
            <summary>
            Adds the current argument as a file to the list or displays an error.
            </summary>
            <param name="argument">Current argument used in the error message if necessary.</param>
            <param name="fileType">Type of file displayed in the error message if necessary.</param>
            <param name="paths">List to add the fully expanded path if the argument is a file path.</param>
            <returns>True if the argument is a file path, otherwise false.</returns>
        </member>
        <member name="M:WixToolset.Extensibility.Services.ICommandLineParser.GetNextArgumentOrError(System.String)">
            <summary>
            Gets the next argument or displays error if no argument is available.
            </summary>
            <param name="argument">Current argument used in the error message if necessary.</param>
            <returns>The next argument if present or null</returns>
        </member>
        <member name="M:WixToolset.Extensibility.Services.ICommandLineParser.GetNextArgumentOrError(System.String,System.Collections.Generic.IList{System.String})">
            <summary>
            Adds the next argument to a list or displays error if no argument is available.
            </summary>
            <param name="argument">Current argument used in the error message if necessary.</param>
            <param name="arguments">List to add the argument to.</param>
            <returns>True if an argument is available, otherwise false.</returns>
        </member>
        <member name="M:WixToolset.Extensibility.Services.ICommandLineParser.GetNextArgumentAsDirectoryOrError(System.String)">
            <summary>
            Gets the next argument as a directory or displays an error.
            </summary>
            <param name="argument">Current argument used in the error message if necessary.</param>
            <returns>The fully expanded path if the argument is a directory, otherwise null.</returns>
        </member>
        <member name="M:WixToolset.Extensibility.Services.ICommandLineParser.GetNextArgumentAsDirectoryOrError(System.String,System.Collections.Generic.IList{System.String})">
            <summary>
            Adds the next argument as a directory to the list or displays an error.
            </summary>
            <param name="argument">Current argument used in the error message if necessary.</param>
            <param name="directories">List to add the fully expanded directory if the argument is a file path.</param>
            <returns>True if the argument is a directory, otherwise false.</returns>
        </member>
        <member name="M:WixToolset.Extensibility.Services.ICommandLineParser.GetNextArgumentAsFilePathOrError(System.String,System.String)">
            <summary>
            Gets the next argument as a file or displays an error.
            </summary>
            <param name="argument">Current argument used in the error message if necessary.</param>
            <param name="filePurpose">Purpose of the required file.</param>
            <returns>The fully expanded path if the argument is a file path, otherwise null.</returns>
        </member>
        <member name="M:WixToolset.Extensibility.Services.ICommandLineParser.GetNextArgumentAsFilePathOrError(System.String,System.String,System.Collections.Generic.IList{System.String})">
            <summary>
            Adds the next argument as a file to the list or displays an error.
            </summary>
            <param name="argument">Current argument used in the error message if necessary.</param>
            <param name="fileType">Type of file displayed in the error message if necessary.</param>
            <param name="paths">List to add the fully expanded path if the argument is a file path.</param>
            <returns>True if the argument is a file path, otherwise false.</returns>
        </member>
        <member name="M:WixToolset.Extensibility.Services.ICommandLineParser.ReportErrorArgument(System.String,WixToolset.Data.Message)">
            <summary>
            Reports a command line error for the provided argument.
            </summary>
            <param name="argument">Argument that caused the error.</param>
            <param name="message">Message to report.</param>
        </member>
        <member name="M:WixToolset.Extensibility.Services.ICommandLineParser.TryGetNextSwitchOrArgument(System.String@)">
            <summary>
            Tries to get the next argument.
            </summary>
            <param name="argument">Next argument if available.</param>
            <returns>True if argument is available, otherwise false.</returns>
        </member>
        <member name="M:WixToolset.Extensibility.Services.ICommandLineParser.PeekNextArgument">
            <summary>
            Looks ahead to the next argument without moving to the next argument.
            </summary>
            <returns>Next argument if available, otherwise null.</returns>
        </member>
        <member name="M:WixToolset.Extensibility.Services.ICommandLineParser.TryPeekNextArgument(System.String@)">
            <summary>
            Tries to looks ahead to the next argument without moving to the next argument.
            </summary>
            <param name="argument">Argument found if present.</param>
            <returns>True if argument is found, otherwise false.</returns>
        </member>
        <member name="T:WixToolset.Extensibility.Services.IExtensionManager">
            <summary>
            Loads extensions and uses the extensions' factories to provide services.
            </summary>
        </member>
        <member name="M:WixToolset.Extensibility.Services.IExtensionManager.Add(System.Reflection.Assembly)">
            <summary>
            Adds an extension assembly directly to the manager.
            </summary>
            <param name="extensionAssembly">Extension assembly.</param>
        </member>
        <member name="M:WixToolset.Extensibility.Services.IExtensionManager.Load(System.String)">
            <summary>
            Loads an extension assembly from an extension reference string.
            </summary>
            <param name="extensionReference">Reference to the extension.</param>
            <returns>The loaded assembly. This assembly can be ignored since the extension manager maintains the list of loaded assemblies internally.</returns>
            <remarks>
            <paramref name="extensionReference"/> can be in several different forms:
            <list type="number">
            <item><term>Full path to an extension file (C:\MyExtensions\MyExtension.Example.wixext.dll)</term></item>
            <item><term>Reference to latest version of an extension in the cache (MyExtension.Example.wixext)</term></item>
            <item><term>Versioned reference to specific extension in the cache (MyExtension.Example.wixext/1.0.2)</term></item>
            <item><term>Relative path to an extension file (..\..\MyExtensions\MyExtension.Example.wixext.dll)</term></item>
            </list>
            </remarks>
        </member>
        <member name="M:WixToolset.Extensibility.Services.IExtensionManager.GetCacheLocations">
            <summary>
            Gets extensions cache locations.
            </summary>
            <returns>List of cache locations where extensions may be found.</returns>
        </member>
        <member name="M:WixToolset.Extensibility.Services.IExtensionManager.GetExtensionPackageRootFolderName">
            <summary>
            Gets the root folder name used in extension's package.
            </summary>
            <returns>Root folder name to find extension in a package.</returns>
        </member>
        <member name="M:WixToolset.Extensibility.Services.IExtensionManager.GetServices``1">
            <summary>
            Gets extensions of specified type from factories loaded into the extension manager.
            </summary>
            <typeparam name="T">Type of extension to get.</typeparam>
            <returns>Extensions of the specified type.</returns>
        </member>
        <member name="T:WixToolset.Extensibility.Services.IFileResolver">
            <summary>
            Interface to resolve file paths using extensions and bind paths.
            </summary>
        </member>
        <member name="M:WixToolset.Extensibility.Services.IFileResolver.ResolveFile(System.String,System.Collections.Generic.IEnumerable{WixToolset.Extensibility.ILibrarianExtension},System.Collections.Generic.IEnumerable{WixToolset.Extensibility.Data.IBindPath},WixToolset.Data.SourceLineNumber,WixToolset.Data.IntermediateSymbolDefinition)">
            <summary>
            Resolves the source path of a file using binder extensions.
            </summary>
            <param name="source">Original source value.</param>
            <param name="librarianExtensions">Extensions used to resolve the file path.</param>
            <param name="bindPaths">Collection of bind paths for the binding stage.</param>
            <param name="sourceLineNumbers">Optional source line of source file being resolved.</param>
            <param name="symbolDefinition">Optional type of source file being resolved.</param>
            <returns>Should return a valid path for the stream to be imported.</returns>
        </member>
        <member name="M:WixToolset.Extensibility.Services.IFileResolver.ResolveFile(System.String,System.Collections.Generic.IEnumerable{WixToolset.Extensibility.IResolverExtension},System.Collections.Generic.IEnumerable{WixToolset.Extensibility.Data.IBindPath},WixToolset.Extensibility.Data.BindStage,WixToolset.Data.SourceLineNumber,WixToolset.Data.IntermediateSymbolDefinition,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Resolves the source path of a file using binder extensions.
            </summary>
            <param name="source">Original source value.</param>
            <param name="resolverExtensions">Extensions used to resolve the file path.</param>
            <param name="bindPaths">Collection of bind paths for the binding stage.</param>
            <param name="bindStage">The binding stage used to determine what collection of bind paths will be used</param>
            <param name="sourceLineNumbers">Optional source line of source file being resolved.</param>
            <param name="symbolDefinition">Optional type of source file being resolved.</param>
            <param name="alreadyCheckedPaths">Optional collection of paths already checked.</param>
            <returns>Should return a valid path for the stream to be imported.</returns>
        </member>
        <member name="T:WixToolset.Extensibility.Services.IFileSystem">
            <summary>
            Abstracts basic file system operations.
            </summary>
        </member>
        <member name="M:WixToolset.Extensibility.Services.IFileSystem.CopyFile(WixToolset.Data.SourceLineNumber,System.String,System.String,System.Boolean)">
            <summary>
            Copies a file.
            </summary>
            <param name="sourceLineNumbers">Optional source line number requiring the copy.</param>
            <param name="source">The file to copy.</param>
            <param name="destination">The destination file.</param>
            <param name="allowHardlink">Allow hardlinks.</param>
        </member>
        <member name="M:WixToolset.Extensibility.Services.IFileSystem.DeleteFile(WixToolset.Data.SourceLineNumber,System.String,System.Boolean,System.Int32)">
            <summary>
            Deletes a file.
            </summary>
            <param name="sourceLineNumbers">Optional source line number requiring the delete.</param>
            <param name="source">The file to delete.</param>
            <param name="throwOnError">Indicates the file must be deleted. Default is a best effort delete.</param>
            <param name="maxRetries">Maximum retry attempts. Default is 4.</param>
        </member>
        <member name="M:WixToolset.Extensibility.Services.IFileSystem.MoveFile(WixToolset.Data.SourceLineNumber,System.String,System.String)">
            <summary>
            Moves a file.
            </summary>
            <param name="sourceLineNumbers">Optional source line number requiring the move.</param>
            <param name="source">The file to move.</param>
            <param name="destination">The destination file.</param>
        </member>
        <member name="M:WixToolset.Extensibility.Services.IFileSystem.OpenFile(WixToolset.Data.SourceLineNumber,System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)">
            <summary>
            Opens a file.
            </summary>
            <param name="sourceLineNumbers">Optional source line number requiring the file.</param>
            <param name="path">The file to open.</param>
            <param name="mode">A System.IO.FileMode value that specifies whether a file is created if one does not exist, and determines whether the contents of existing files are retained or overwritten.</param>
            <param name="access">A System.IO.FileAccess value that specifies the operations that can be performed on the file.</param>
            <param name="share">A System.IO.FileShare value specifying the type of access other threads have to the file.</param>
        </member>
        <member name="M:WixToolset.Extensibility.Services.IFileSystem.ExecuteWithRetries(System.Action,System.Int32)">
            <summary>
            Executes an action and retries on any exception a few times with short pause
            between each attempt. Primarily intended for use with file system operations
            that might get interrupted by external systems (usually anti-virus).
            </summary>
            <param name="action">Action to execute.</param>
            <param name="maxRetries">Maximum retry attempts. Default is 4.</param>
        </member>
        <member name="T:WixToolset.Extensibility.Services.ILayoutServices">
            <summary>
            Interface provided to track files for use by layout later.
            </summary>
        </member>
        <member name="M:WixToolset.Extensibility.Services.ILayoutServices.CreateFileTransfer(System.String,System.String,System.Boolean,WixToolset.Data.SourceLineNumber)">
            <summary>
            Creates a file transfer and marks it redundant if the source and destination are identical.
            </summary>
            <param name="source">Source for the file transfer.</param>
            <param name="destination">Destination for the file transfer.</param>
            <param name="move">Indicates whether to move or copy the source file.</param>
            <param name="sourceLineNumbers">Optional source line numbers that requested the file transfer.</param>
        </member>
        <member name="M:WixToolset.Extensibility.Services.ILayoutServices.TrackFile(System.String,WixToolset.Extensibility.Data.TrackedFileType,WixToolset.Data.SourceLineNumber)">
            <summary>
            Creates a tracked file.
            </summary>
            <param name="path">Destination path for the build output.</param>
            <param name="type">Type of tracked file to create.</param>
            <param name="sourceLineNumbers">Optional source line numbers that requested the tracked file.</param>
        </member>
        <member name="T:WixToolset.Extensibility.Services.IMessaging">
            <summary>
            Interface for handling messages (error/warning/verbose).
            </summary>
        </member>
        <member name="P:WixToolset.Extensibility.Services.IMessaging.EncounteredError">
            <summary>
            Indicates whether an error has been found.
            </summary>
            <value>A bool indicating whether an error has been found.</value>
        </member>
        <member name="P:WixToolset.Extensibility.Services.IMessaging.ErrorCount">
            <summary>
            Gets the number of errors encountered thus far.
            </summary>
            <value>The number of errors encountered.</value>
        </member>
        <member name="P:WixToolset.Extensibility.Services.IMessaging.LastErrorNumber">
            <summary>
            Gets the last error code encountered during messaging.
            </summary>
            <value>The exit code for the process.</value>
        </member>
        <member name="P:WixToolset.Extensibility.Services.IMessaging.ShowVerboseMessages">
            <summary>
            Gets or sets the option to show verbose messages.
            </summary>
            <value>The option to show verbose messages.</value>
        </member>
        <member name="P:WixToolset.Extensibility.Services.IMessaging.SuppressAllWarnings">
            <summary>
            Gets or sets the option to suppress all warning messages.
            </summary>
            <value>The option to suppress all warning messages.</value>
        </member>
        <member name="P:WixToolset.Extensibility.Services.IMessaging.WarningsAsError">
            <summary>
            Gets and sets the option to treat warnings as errors.
            </summary>
            <value>The option to treat warnings as errors.</value>
        </member>
        <member name="M:WixToolset.Extensibility.Services.IMessaging.SetListener(WixToolset.Extensibility.IMessageListener)">
            <summary>
            Sets the listener for messaging.
            </summary>
            <param name="listener"></param>
        </member>
        <member name="M:WixToolset.Extensibility.Services.IMessaging.ElevateWarningMessage(System.Int32)">
            <summary>
            Adds a warning message id to be elevated to an error message.
            </summary>
            <param name="warningNumber">Id of the message to elevate.</param>
        </member>
        <member name="M:WixToolset.Extensibility.Services.IMessaging.SuppressWarningMessage(System.Int32)">
            <summary>
            Adds a warning message id to be suppressed in message output.
            </summary>
            <param name="warningNumber">Id of the message to suppress.</param>
        </member>
        <member name="M:WixToolset.Extensibility.Services.IMessaging.Write(WixToolset.Data.Message)">
            <summary>
            Sends a message with the given arguments.
            </summary>
            <param name="message">Message to write.</param>
        </member>
        <member name="M:WixToolset.Extensibility.Services.IMessaging.Write(System.String,System.Boolean)">
            <summary>
            Sends a message with the given arguments.
            </summary>
            <param name="message">Message to write.</param>
            <param name="verbose">Indicates where to write a verbose message.</param>
        </member>
        <member name="T:WixToolset.Extensibility.Services.IParseHelper">
            <summary>
            Interface provided to help compiler and optimizer extensions parse.
            </summary>
        </member>
        <member name="M:WixToolset.Extensibility.Services.IParseHelper.CreateGuid(System.Guid,System.String)">
            <summary>
            Creates a version 3 name-based UUID.
            </summary>
            <param name="namespaceGuid">The namespace UUID.</param>
            <param name="value">The value.</param>
            <returns>The generated GUID for the given namespace and value.</returns>
        </member>
        <member name="M:WixToolset.Extensibility.Services.IParseHelper.CreateIdentifier(System.String,System.String[])">
            <summary>
            Create an identifier by hashing data from the row.
            </summary>
            <param name="prefix">Three letter or less prefix for generated row identifier.</param>
            <param name="args">Information to hash.</param>
            <returns>The new identifier.</returns>
        </member>
        <member name="M:WixToolset.Extensibility.Services.IParseHelper.CreateIdentifierFromFilename(System.String)">
            <summary>
            Create an identifier based on passed file name
            </summary>
            <param name="filename">File name to generate identifier from</param>
            <returns>The new identifier.</returns>
        </member>
        <member name="M:WixToolset.Extensibility.Services.IParseHelper.CreateIdentifierValueFromPlatform(System.String,WixToolset.Data.Platform,WixToolset.Extensibility.Data.BurnPlatforms)">
            <summary>
            Append a suffix to the given name based on the current platform.
            If the current platform is not in the supported platforms, then it returns null.
            </summary>
            <param name="name">The base name for the identifier.</param>
            <param name="currentPlatform">The platform being compiled.</param>
            <param name="supportedPlatforms">The platforms for which there are specialized implementations.</param>
            <returns>The generated identifier value, or null if the current platform isn't supported.</returns>
        </member>
        <member name="M:WixToolset.Extensibility.Services.IParseHelper.CreateSymbol(WixToolset.Data.IntermediateSection,WixToolset.Data.SourceLineNumber,System.String,WixToolset.Data.Identifier)">
            <summary>
            Creates a symbol in the section.
            </summary>
            <param name="section">Section to add the new symbol to.</param>
            <param name="sourceLineNumbers">Source and line number of current symbol.</param>
            <param name="symbolName">Name of symbol definition.</param>
            <param name="identifier">Optional identifier for the symbol.</param>
            <returns>New symbol.</returns>
        </member>
        <member name="M:WixToolset.Extensibility.Services.IParseHelper.CreateSymbol(WixToolset.Data.IntermediateSection,WixToolset.Data.SourceLineNumber,WixToolset.Data.IntermediateSymbolDefinition,WixToolset.Data.Identifier)">
            <summary>
            Creates a symbol in the section.
            </summary>
            <param name="section">Section to add the new symbol to.</param>
            <param name="sourceLineNumbers">Source and line number of current symbol.</param>
            <param name="symbolDefinition">Symbol definition to create from.</param>
            <param name="identifier">Optional identifier for the symbol.</param>
            <returns>New symbol.</returns>
        </member>
        <member name="M:WixToolset.Extensibility.Services.IParseHelper.CreateDirectorySymbol(WixToolset.Data.IntermediateSection,WixToolset.Data.SourceLineNumber,WixToolset.Data.Identifier,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Creates a directory row from a name.
            </summary>
            <param name="section">Section to add the new symbol to.</param>
            <param name="sourceLineNumbers">Source line information.</param>
            <param name="id">Optional identifier for the new row.</param>
            <param name="parentId">Optional identifier for the parent row.</param>
            <param name="name">Long name of the directory.</param>
            <param name="shortName">Optional short name of the directory.</param>
            <param name="sourceName">Optional source name for the directory.</param>
            <param name="shortSourceName">Optional short source name for the directory.</param>
            <returns>Identifier for the newly created row.</returns>
        </member>
        <member name="M:WixToolset.Extensibility.Services.IParseHelper.CreateDirectoryReferenceFromInlineSyntax(WixToolset.Data.IntermediateSection,WixToolset.Data.SourceLineNumber,System.Xml.Linq.XAttribute,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Creates directories using the inline directory syntax.
            </summary>
            <param name="section">Section to add the new symbol to.</param>
            <param name="sourceLineNumbers">Source line information.</param>
            <param name="attribute">Attribute containing the inline syntax.</param>
            <param name="parentId">Optional identifier of parent directory.</param>
            <param name="inlineSyntax">Optional inline syntax to override attribute's value.</param>
            <param name="sectionCachedInlinedDirectoryIds">Mapping of inline directory syntax to ids for the section.</param>
            <returns>Identifier of the leaf directory created.</returns>
        </member>
        <member name="M:WixToolset.Extensibility.Services.IParseHelper.CreateRegistrySymbol(WixToolset.Data.IntermediateSection,WixToolset.Data.SourceLineNumber,WixToolset.Data.Symbols.RegistryRootType,System.String,System.String,System.String,System.String,WixToolset.Data.Symbols.RegistryValueType,WixToolset.Data.Symbols.RegistryValueActionType)">
            <summary>
            Creates a Registry symbol in the active section.
            </summary>
            <param name="section">Active section.</param>
            <param name="sourceLineNumbers">Source and line number of the current symbol.</param>
            <param name="root">The registry entry root.</param>
            <param name="key">The registry entry key.</param>
            <param name="name">The registry entry name.</param>
            <param name="value">The registry entry value.</param>
            <param name="componentId">The component which will control installation/uninstallation of the registry entry.</param>
            <param name="valueType">The registry value type. Default is string.</param>
            <param name="valueAction">The way to apply the registry value. Default is write.</param>
        </member>
        <member name="M:WixToolset.Extensibility.Services.IParseHelper.CreateRegistrySymbol(WixToolset.Data.IntermediateSection,WixToolset.Data.SourceLineNumber,WixToolset.Data.Symbols.RegistryRootType,System.String,System.String,System.Int32,System.String)">
            <summary>
            Creates a numeric Registry symbol in the active section.
            </summary>
            <param name="section">Active section.</param>
            <param name="sourceLineNumbers">Source and line number of the current symbol.</param>
            <param name="root">The registry entry root.</param>
            <param name="key">The registry entry key.</param>
            <param name="name">The registry entry name.</param>
            <param name="value">The numeric registry entry value.</param>
            <param name="componentId">The component which will control installation/uninstallation of the registry entry.</param>
        </member>
        <member name="M:WixToolset.Extensibility.Services.IParseHelper.CreateSimpleReference(WixToolset.Data.IntermediateSection,WixToolset.Data.SourceLineNumber,System.String,System.String)">
            <summary>
            Create a WixSimpleReference symbol in the active section.
            </summary>
            <param name="section">Active section.</param>
            <param name="sourceLineNumbers">Source line information for the row.</param>
            <param name="symbolName">The symbol name of the simple reference.</param>
            <param name="primaryKey">The primary key of the simple reference.</param>
        </member>
        <member name="M:WixToolset.Extensibility.Services.IParseHelper.CreateSimpleReference(WixToolset.Data.IntermediateSection,WixToolset.Data.SourceLineNumber,System.String,System.String[])">
            <summary>
            Create a WixSimpleReference symbol in the active section.
            </summary>
            <param name="section">Active section.</param>
            <param name="sourceLineNumbers">Source line information for the row.</param>
            <param name="symbolName">The symbol name of the simple reference.</param>
            <param name="primaryKeys">The primary keys of the simple reference.</param>
        </member>
        <member name="M:WixToolset.Extensibility.Services.IParseHelper.CreateSimpleReference(WixToolset.Data.IntermediateSection,WixToolset.Data.SourceLineNumber,WixToolset.Data.IntermediateSymbolDefinition,System.String)">
            <summary>
            Create a WixSimpleReference symbol in the active section.
            </summary>
            <param name="section">Active section.</param>
            <param name="sourceLineNumbers">Source line information for the row.</param>
            <param name="symbolDefinition">The symbol definition of the simple reference.</param>
            <param name="primaryKey">The primary key of the simple reference.</param>
        </member>
        <member name="M:WixToolset.Extensibility.Services.IParseHelper.CreateSimpleReference(WixToolset.Data.IntermediateSection,WixToolset.Data.SourceLineNumber,WixToolset.Data.IntermediateSymbolDefinition,System.String[])">
            <summary>
            Create a WixSimpleReference symbol in the active section.
            </summary>
            <param name="section">Active section.</param>
            <param name="sourceLineNumbers">Source line information for the row.</param>
            <param name="symbolDefinition">The symbol definition of the simple reference.</param>
            <param name="primaryKeys">The primary keys of the simple reference.</param>
        </member>
        <member name="M:WixToolset.Extensibility.Services.IParseHelper.CreateCustomActionReference(WixToolset.Data.SourceLineNumber,WixToolset.Data.IntermediateSection,System.String,WixToolset.Data.Platform,WixToolset.Extensibility.Data.CustomActionPlatforms)">
            <summary>
            Create a reference in the specified section for a custom action specialized for specific platforms,
            given standard prefixes for naming and suffixes for platforms.
            </summary>
            <param name="sourceLineNumbers">Source line information.</param>
            <param name="section">Section to create the reference in.</param>
            <param name="customAction">The custom action base name.</param>
            <param name="platform">The platform being compiled.</param>
            <param name="supportedPlatforms">The platforms for which there are specialized custom actions.</param>
        </member>
        <member name="M:WixToolset.Extensibility.Services.IParseHelper.CreateComplexReference(WixToolset.Data.IntermediateSection,WixToolset.Data.SourceLineNumber,WixToolset.Data.ComplexReferenceParentType,System.String,System.String,WixToolset.Data.ComplexReferenceChildType,System.String,System.Boolean)">
            <summary>
            Creates WixComplexReference and WixGroup symbols in the active section.
            </summary>
            <param name="section">Section to create the reference in.</param>
            <param name="sourceLineNumbers">Source line information.</param>
            <param name="parentType">The parent type.</param>
            <param name="parentId">The parent id.</param>
            <param name="parentLanguage">The parent language.</param>
            <param name="childType">The child type.</param>
            <param name="childId">The child id.</param>
            <param name="isPrimary">Whether the child is primary.</param>
        </member>
        <member name="M:WixToolset.Extensibility.Services.IParseHelper.CreateWixGroupSymbol(WixToolset.Data.IntermediateSection,WixToolset.Data.SourceLineNumber,WixToolset.Data.ComplexReferenceParentType,System.String,WixToolset.Data.ComplexReferenceChildType,System.String)">
            <summary>
            A symbol in the WixGroup table is added for this child node and its parent node.
            </summary>
            <param name="section">Section to create the reference in.</param>
            <param name="sourceLineNumbers">Source line information for the row.</param>
            <param name="parentType">Type of child's complex reference parent.</param>
            <param name="parentId">Id of the parenet node.</param>
            <param name="childType">Complex reference type of child</param>
            <param name="childId">Id of the Child Node.</param>
        </member>
        <member name="M:WixToolset.Extensibility.Services.IParseHelper.CreateWixSearchSymbol(WixToolset.Data.IntermediateSection,WixToolset.Data.SourceLineNumber,System.String,WixToolset.Data.Identifier,System.String,System.String,System.String,System.String)">
            <summary>
            Creates a symbol in the WixSearch table.
            </summary>
            <param name="section">Section to create the reference in.</param>
            <param name="sourceLineNumbers">Source line number for the search element.</param>
            <param name="elementName">Name of search element.</param>
            <param name="id">Identifier of the search.</param>
            <param name="variable">The Burn variable to store the result into.</param>
            <param name="condition">A condition to test before evaluating the search.</param>
            <param name="after">The search that this one will execute after.</param>
            <param name="bootstrapperExtensionId">The id of the bootstrapper extension that handles this search.</param>
        </member>
        <member name="M:WixToolset.Extensibility.Services.IParseHelper.CreateWixSearchRelationSymbol(WixToolset.Data.IntermediateSection,WixToolset.Data.SourceLineNumber,WixToolset.Data.Identifier,System.String,System.Int32)">
             <summary>
            
             </summary>
             <param name="section">Section to create the reference in.</param>
             <param name="sourceLineNumbers">Source line number for the parent element.</param>
             <param name="id">Identifier of the search (key into the WixSearch table)</param>
             <param name="parentId">Identifier of the search that comes before (key into the WixSearch table)</param>
             <param name="attributes">Further details about the relation between id and parentId.</param>
        </member>
        <member name="M:WixToolset.Extensibility.Services.IParseHelper.ContainsProperty(System.String)">
            <summary>
            Checks if the string contains a property (i.e. "foo[Property]bar")
            </summary>
            <param name="possibleProperty">String to evaluate for properties.</param>
            <returns>True if a property is found in the string.</returns>
        </member>
        <member name="M:WixToolset.Extensibility.Services.IParseHelper.EnsureTable(WixToolset.Data.IntermediateSection,WixToolset.Data.SourceLineNumber,System.String)">
            <summary>
            Add the appropriate symbols to make sure that the given table shows up in the resulting output.
            </summary>
            <param name="section">Active section.</param>
            <param name="sourceLineNumbers">Source line numbers.</param>
            <param name="tableName">Name of the table to ensure existance of.</param>
        </member>
        <member name="M:WixToolset.Extensibility.Services.IParseHelper.EnsureTable(WixToolset.Data.IntermediateSection,WixToolset.Data.SourceLineNumber,WixToolset.Data.WindowsInstaller.TableDefinition)">
            <summary>
            Add the appropriate symbols to make sure that the given table shows up in the resulting output.
            </summary>
            <param name="section">Active section.</param>
            <param name="sourceLineNumbers">Source line numbers.</param>
            <param name="tableDefinition">Definition of the table to ensure existance of.</param>
        </member>
        <member name="M:WixToolset.Extensibility.Services.IParseHelper.GetAttributeValue(WixToolset.Data.SourceLineNumber,System.Xml.Linq.XAttribute,WixToolset.Data.EmptyRule)">
            <summary>
            Get an attribute value and displays an error if the value is empty by default.
            </summary>
            <param name="sourceLineNumbers">Source line information about the owner element.</param>
            <param name="attribute">The attribute containing the value to get.</param>
            <param name="emptyRule">A rule for the contents of the value. If the contents do not follow the rule, an error is thrown.</param>
            <returns>The attribute's value.</returns>
        </member>
        <member name="M:WixToolset.Extensibility.Services.IParseHelper.GetAttributeBundleVariableNameIdentifier(WixToolset.Data.SourceLineNumber,System.Xml.Linq.XAttribute)">
            <summary>
            Gets a bundle variable name identifier and displays an error for an illegal value.
            </summary>
            <param name="sourceLineNumbers">Source line information about the owner element.</param>
            <param name="attribute">The attribute containing the value to get.</param>
            <returns>The attribute's identifier value or a special value if an error occurred.</returns>
        </member>
        <member name="M:WixToolset.Extensibility.Services.IParseHelper.GetAttributeBundleVariableNameValue(WixToolset.Data.SourceLineNumber,System.Xml.Linq.XAttribute,WixToolset.Extensibility.Data.BundleVariableNameRule)">
            <summary>
            Gets a bundle variable name value and displays an error for an illegal value.
            </summary>
            <param name="sourceLineNumbers">Source line information about the owner element.</param>
            <param name="attribute">The attribute containing the value to get.</param>
            <param name="nameRule">A rule for the contents of the value. If the contents do not follow the rule, an error is thrown.</param>
            <returns>The attribute's value.</returns>
        </member>
        <member name="M:WixToolset.Extensibility.Services.IParseHelper.GetAttributeGuidValue(WixToolset.Data.SourceLineNumber,System.Xml.Linq.XAttribute,System.Boolean,System.Boolean)">
            <summary>
            Get a guid attribute value and displays an error for an illegal guid value.
            </summary>
            <param name="sourceLineNumbers">Source line information about the owner element.</param>
            <param name="attribute">The attribute containing the value to get.</param>
            <param name="generatable">Determines whether the guid can be automatically generated.</param>
            <param name="canBeEmpty">If true, no error is raised on empty value. If false, an error is raised.</param>
            <returns>The attribute's guid value or a special value if an error occurred.</returns>
        </member>
        <member name="M:WixToolset.Extensibility.Services.IParseHelper.GetAttributeIdentifier(WixToolset.Data.SourceLineNumber,System.Xml.Linq.XAttribute)">
            <summary>
            Get an identifier attribute value and displays an error for an illegal identifier value.
            </summary>
            <param name="sourceLineNumbers">Source line information about the owner element.</param>
            <param name="attribute">The attribute containing the value to get.</param>
            <returns>The attribute's identifier value or a special value if an error occurred.</returns>
        </member>
        <member name="M:WixToolset.Extensibility.Services.IParseHelper.GetAttributeIdentifierValue(WixToolset.Data.SourceLineNumber,System.Xml.Linq.XAttribute)">
            <summary>
            Get an identifier attribute value and displays an error for an illegal identifier value.
            </summary>
            <param name="sourceLineNumbers">Source line information about the owner element.</param>
            <param name="attribute">The attribute containing the value to get.</param>
            <returns>The attribute's identifier value or a special value if an error occurred.</returns>
        </member>
        <member name="M:WixToolset.Extensibility.Services.IParseHelper.GetAttributeIntegerValue(WixToolset.Data.SourceLineNumber,System.Xml.Linq.XAttribute,System.Int32,System.Int32)">
            <summary>
            Get an integer attribute value and displays an error for an illegal integer value.
            </summary>
            <param name="sourceLineNumbers">Source line information about the owner element.</param>
            <param name="attribute">The attribute containing the value to get.</param>
            <param name="minimum">The minimum legal value.</param>
            <param name="maximum">The maximum legal value.</param>
            <returns>The attribute's integer value or a special value if an error occurred during conversion.</returns>
        </member>
        <member name="M:WixToolset.Extensibility.Services.IParseHelper.GetAttributeLongValue(WixToolset.Data.SourceLineNumber,System.Xml.Linq.XAttribute,System.Int64,System.Int64)">
            <summary>
            Get a long integral attribute value and displays an error for an illegal long value.
            </summary>
            <param name="sourceLineNumbers">Source line information about the owner element.</param>
            <param name="attribute">The attribute containing the value to get.</param>
            <param name="minimum">The minimum legal value.</param>
            <param name="maximum">The maximum legal value.</param>
            <returns>The attribute's long value or a special value if an error occurred during conversion.</returns>
        </member>
        <member name="M:WixToolset.Extensibility.Services.IParseHelper.GetAttributeLongFilename(WixToolset.Data.SourceLineNumber,System.Xml.Linq.XAttribute,System.Boolean,System.Boolean)">
            <summary>
            Gets a long filename value and displays an error for an illegal long filename value.
            </summary>
            <param name="sourceLineNumbers">Source line information about the owner element.</param>
            <param name="attribute">The attribute containing the value to get.</param>
            <param name="allowWildcards">true if wildcards are allowed in the filename.</param>
            <param name="allowRelative">true if relative paths are allowed in the filename.</param>
            <returns>The attribute's long filename value.</returns>
        </member>
        <member name="M:WixToolset.Extensibility.Services.IParseHelper.GetAttributeRegistryRootValue(WixToolset.Data.SourceLineNumber,System.Xml.Linq.XAttribute,System.Boolean)">
            <summary>
            Gets a RegistryRootType value and displays an error for an illegal value.
            </summary>
            <param name="sourceLineNumbers">Source line information about the owner element.</param>
            <param name="attribute">The attribute containing the value to get.</param>
            <param name="allowHkmu">Whether HKMU is returned as -1 (true), or treated as an error (false).</param>
            <returns>The attribute's RegisitryRootType value.</returns>
        </member>
        <member name="M:WixToolset.Extensibility.Services.IParseHelper.GetAttributeVersionValue(WixToolset.Data.SourceLineNumber,System.Xml.Linq.XAttribute)">
            <summary>
            Gets a version value or possibly a binder variable and displays an error for an illegal version value.
            </summary>
            <param name="sourceLineNumbers">Source line information about the owner element.</param>
            <param name="attribute">The attribute containing the value to get.</param>
            <returns>The attribute's version value.</returns>
        </member>
        <member name="M:WixToolset.Extensibility.Services.IParseHelper.GetAttributeYesNoValue(WixToolset.Data.SourceLineNumber,System.Xml.Linq.XAttribute)">
            <summary>
            Gets a yes/no value and displays an error for an illegal yes/no value.
            </summary>
            <param name="sourceLineNumbers">Source line information about the owner element.</param>
            <param name="attribute">The attribute containing the value to get.</param>
            <returns>The attribute's YesNoType value.</returns>
        </member>
        <member name="M:WixToolset.Extensibility.Services.IParseHelper.GetAttributeYesNoDefaultValue(WixToolset.Data.SourceLineNumber,System.Xml.Linq.XAttribute)">
            <summary>
            Gets a yes/no/default value and displays an error for an illegal yes/no/default value.
            </summary>
            <param name="sourceLineNumbers">Source line information about the owner element.</param>
            <param name="attribute">The attribute containing the value to get.</param>
            <returns>The attribute's YesNoType value.</returns>
        </member>
        <member name="M:WixToolset.Extensibility.Services.IParseHelper.GetSourceLineNumbers(System.Xml.Linq.XElement)">
            <summary>
            Gets a source line number for an element.
            </summary>
            <param name="element">Element to get source line number.</param>
            <returns>Source line number.</returns>
        </member>
        <member name="M:WixToolset.Extensibility.Services.IParseHelper.GetConditionInnerText(System.Xml.Linq.XElement)">
            <summary>
            Gets node's inner text and ensure's it is safe for use in a condition by trimming any extra whitespace.
            </summary>
            <param name="node">The node to ensure inner text is a condition.</param>
            <returns>The value converted into a safe condition.</returns>
        </member>
        <member name="M:WixToolset.Extensibility.Services.IParseHelper.GetTrimmedInnerText(System.Xml.Linq.XElement)">
            <summary>
            Get an element's inner text and trims any extra whitespace.
            </summary>
            <param name="element">The element with inner text to be trimmed.</param>
            <returns>The node's inner text trimmed.</returns>
        </member>
        <member name="M:WixToolset.Extensibility.Services.IParseHelper.InnerTextDisallowed(System.Xml.Linq.XElement)">
            <summary>
            Validates that the element does not contain inner text.
            </summary>
            <param name="element">Element to check for inner text.</param>
        </member>
        <member name="M:WixToolset.Extensibility.Services.IParseHelper.InnerTextDisallowed(System.Xml.Linq.XElement,System.String)">
            <summary>
            Validates that the element does not contain inner text and suggests which attribute to use instead.
            </summary>
            <param name="element">Element to check for inner text.</param>
            <param name="attributeName">Name of attribute to use instead of inner text.</param>
        </member>
        <member name="M:WixToolset.Extensibility.Services.IParseHelper.IsValidIdentifier(System.String)">
            <summary>
            Verifies that a value is a legal identifier.
            </summary>
            <param name="value">The value to verify.</param>
            <returns>true if the value is an identifier; false otherwise.</returns>
        </member>
        <member name="M:WixToolset.Extensibility.Services.IParseHelper.IsValidLocIdentifier(System.String)">
            <summary>
            Verifies if an identifier is a valid loc identifier.
            </summary>
            <param name="identifier">Identifier to verify.</param>
            <returns>True if the identifier is a valid loc identifier.</returns>
        </member>
        <member name="M:WixToolset.Extensibility.Services.IParseHelper.IsValidLongFilename(System.String,System.Boolean,System.Boolean)">
            <summary>
            Verifies if a filename is a valid long filename.
            </summary>
            <param name="filename">Filename to verify.</param>
            <param name="allowWildcards">true if wildcards are allowed in the filename.</param>
            <param name="allowRelative">true if relative paths are allowed in the filename.</param>
            <returns>True if the filename is a valid long filename</returns>
        </member>
        <member name="M:WixToolset.Extensibility.Services.IParseHelper.IsValidShortFilename(System.String,System.Boolean)">
            <summary>
            Verifies if a filename is a valid short filename.
            </summary>
            <param name="filename">Filename to verify.</param>
            <param name="allowWildcards">Indicates whether wildcards are allowed in the filename.</param>
            <returns>True if the filename is a valid short filename</returns>
        </member>
        <member name="M:WixToolset.Extensibility.Services.IParseHelper.ParseExtensionAttribute(System.Collections.Generic.IEnumerable{WixToolset.Extensibility.ICompilerExtension},WixToolset.Data.Intermediate,WixToolset.Data.IntermediateSection,System.Xml.Linq.XElement,System.Xml.Linq.XAttribute,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Attempts to use an extension to parse the attribute.
            </summary>
            <param name="extensions"></param>
            <param name="intermediate">Parent intermediate.</param>
            <param name="section">Parent section.</param>
            <param name="element">Element containing attribute to be parsed.</param>
            <param name="attribute">Attribute to be parsed.</param>
            <param name="context">Extra information about the context in which this element is being parsed.</param>
        </member>
        <member name="M:WixToolset.Extensibility.Services.IParseHelper.ParseExtensionElement(System.Collections.Generic.IEnumerable{WixToolset.Extensibility.ICompilerExtension},WixToolset.Data.Intermediate,WixToolset.Data.IntermediateSection,System.Xml.Linq.XElement,System.Xml.Linq.XElement,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Attempts to use an extension to parse the element.
            </summary>
            <param name="extensions"></param>
            <param name="intermediate">Parent intermediate.</param>
            <param name="section">Parent section.</param>
            <param name="parentElement">Element containing element to be parsed.</param>
            <param name="element">Element to be parsed.</param>
            <param name="context">Extra information about the context in which this element is being parsed.</param>
        </member>
        <member name="M:WixToolset.Extensibility.Services.IParseHelper.ParsePossibleKeyPathExtensionElement(System.Collections.Generic.IEnumerable{WixToolset.Extensibility.ICompilerExtension},WixToolset.Data.Intermediate,WixToolset.Data.IntermediateSection,System.Xml.Linq.XElement,System.Xml.Linq.XElement,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Attempts to use an extension to parse the element, with support for setting component keypath.
            </summary>
            <param name="extensions"></param>
            <param name="intermediate">Parent intermediate.</param>
            <param name="section">Parent section.</param>
            <param name="parentElement">Element containing element to be parsed.</param>
            <param name="element">Element to be parsed.</param>
            <param name="context">Extra information about the context in which this element is being parsed.</param>
        </member>
        <member name="M:WixToolset.Extensibility.Services.IParseHelper.ParseForExtensionElements(System.Collections.Generic.IEnumerable{WixToolset.Extensibility.ICompilerExtension},WixToolset.Data.Intermediate,WixToolset.Data.IntermediateSection,System.Xml.Linq.XElement,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Process all children of the element looking for extensions and erroring on the unexpected.
            </summary>
            <param name="extensions"></param>
            <param name="intermediate">Parent intermediate.</param>
            <param name="section">Parent section.</param>
            <param name="element">Element to parse children.</param>
            <param name="context">Extra information about the context in which this element is being parsed.</param>
        </member>
        <member name="M:WixToolset.Extensibility.Services.IParseHelper.ScheduleActionSymbol(WixToolset.Data.IntermediateSection,WixToolset.Data.SourceLineNumber,WixToolset.Data.AccessModifier,WixToolset.Data.Symbols.SequenceTable,System.String,System.String,System.String,System.String,System.Boolean)">
            <summary>
            Schedules an action symbol.
            </summary>
            <param name="section">Section to add the symbol to.</param>
            <param name="sourceLineNumbers">Source line information about the owner element.</param>
            <param name="access">Access modifier for the scheduled action.</param>
            <param name="sequence">Sequence to add the action to.</param>
            <param name="name">Name of action.</param>
            <param name="condition">Optional condition of action.</param>
            <param name="beforeAction">Optional action to schedule before.</param>
            <param name="afterAction">Option action to schedule after.</param>
            <param name="overridable">Optional overridable flag.</param>
        </member>
        <member name="M:WixToolset.Extensibility.Services.IParseHelper.UnexpectedAttribute(System.Xml.Linq.XElement,System.Xml.Linq.XAttribute)">
            <summary>
            Called when the compiler encounters an unexpected attribute.
            </summary>
            <param name="element">Parent element that found unexpected attribute.</param>
            <param name="attribute">Unexpected attribute.</param>
        </member>
        <member name="M:WixToolset.Extensibility.Services.IParseHelper.UnexpectedElement(System.Xml.Linq.XElement,System.Xml.Linq.XElement)">
            <summary>
            Called when the compiler encounters an unexpected child element.
            </summary>
            <param name="parentElement">Parent element that found unexpected child.</param>
            <param name="childElement">Unexpected child element.</param>
        </member>
        <member name="T:WixToolset.Extensibility.Services.IPathResolver">
            <summary>
            Support for processing paths.
            </summary>
        </member>
        <member name="M:WixToolset.Extensibility.Services.IPathResolver.GetCanonicalDirectoryPath(System.Collections.Generic.Dictionary{System.String,WixToolset.Extensibility.Data.IResolvedDirectory},System.Collections.Generic.Dictionary{System.String,System.String},System.String,WixToolset.Data.Platform)">
            <summary>
            Get the canonical source path of a directory.
            </summary>
            <param name="directories">All cached directories.</param>
            <param name="componentIdGenSeeds">Hash table of Component GUID generation seeds indexed by directory id.</param>
            <param name="directory">Directory identifier.</param>
            <param name="platform">Current platform.</param>
            <returns>Source path of a directory.</returns>
        </member>
        <member name="M:WixToolset.Extensibility.Services.IPathResolver.GetDirectoryPath(System.Collections.Generic.Dictionary{System.String,WixToolset.Extensibility.Data.IResolvedDirectory},System.String)">
            <summary>
            Get the source path of a directory.
            </summary>
            <param name="directories">All cached directories.</param>
            <param name="directory">Directory identifier.</param>
            <returns>Source path of a directory.</returns>
        </member>
        <member name="M:WixToolset.Extensibility.Services.IPathResolver.GetFileSourcePath(System.Collections.Generic.Dictionary{System.String,WixToolset.Extensibility.Data.IResolvedDirectory},System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Gets the source path of a file.
            </summary>
            <param name="directories">All cached directories in <see cref="T:WixToolset.Extensibility.Data.IResolvedDirectory"/>.</param>
            <param name="directoryId">Parent directory identifier.</param>
            <param name="fileName">File name (in long|source format).</param>
            <param name="compressed">Specifies the package is compressed.</param>
            <param name="useLongName">Specifies the package uses long file names.</param>
            <returns>Source path of file relative to package directory.</returns>
        </member>
        <member name="T:WixToolset.Extensibility.Services.IPreprocessHelper">
            <summary>
            Interface provided to help preprocessor extensions.
            </summary>
        </member>
        <member name="M:WixToolset.Extensibility.Services.IPreprocessHelper.AddVariable(WixToolset.Extensibility.Data.IPreprocessContext,System.String,System.String)">
            <summary>
            Add a variable.
            </summary>
            <param name="context">The preprocess context.</param>
            <param name="name">The variable name.</param>
            <param name="value">The variable value.</param>
        </member>
        <member name="M:WixToolset.Extensibility.Services.IPreprocessHelper.AddVariable(WixToolset.Extensibility.Data.IPreprocessContext,System.String,System.String,System.Boolean)">
            <summary>
            Add a variable.
            </summary>
            <param name="context">The preprocess context.</param>
            <param name="name">The variable name.</param>
            <param name="value">The variable value.</param>
            <param name="showWarning">Set to true to show variable overwrite warning.</param>
        </member>
        <member name="M:WixToolset.Extensibility.Services.IPreprocessHelper.EvaluateFunction(WixToolset.Extensibility.Data.IPreprocessContext,System.String)">
            <summary>
            Evaluate a function.
            </summary>
            <param name="context">The preprocess context.</param>
            <param name="function">The function expression including the prefix and name.</param>
            <returns>The function value.</returns>
        </member>
        <member name="M:WixToolset.Extensibility.Services.IPreprocessHelper.EvaluateFunction(WixToolset.Extensibility.Data.IPreprocessContext,System.String,System.String,System.String[])">
            <summary>
            Evaluate a function.
            </summary>
            <param name="context">The preprocess context.</param>
            <param name="prefix">The function prefix.</param>
            <param name="function">The function name.</param>
            <param name="args">The arguments for the function.</param>
            <returns>The function value or null if the function is not defined.</returns>
        </member>
        <member name="M:WixToolset.Extensibility.Services.IPreprocessHelper.GetVariableValue(WixToolset.Extensibility.Data.IPreprocessContext,System.String,System.Boolean)">
            <summary>
            Get the value of a variable expression like var.name.
            </summary>
            <param name="context">The preprocess context.</param>
            <param name="variable">The variable expression including the optional prefix and name.</param>
            <param name="allowMissingPrefix">true to allow the variable prefix to be missing.</param>
            <returns>The variable value.</returns>
        </member>
        <member name="M:WixToolset.Extensibility.Services.IPreprocessHelper.GetVariableValue(WixToolset.Extensibility.Data.IPreprocessContext,System.String,System.String)">
            <summary>
            Get the value of a variable.
            </summary>
            <param name="context">The preprocess context.</param>
            <param name="prefix">The variable prefix.</param>
            <param name="name">The variable name.</param>
            <returns>The variable value or null if the variable is not set.</returns>
        </member>
        <member name="M:WixToolset.Extensibility.Services.IPreprocessHelper.PreprocessPragma(WixToolset.Extensibility.Data.IPreprocessContext,System.String,System.String,System.Xml.Linq.XContainer)">
            <summary>
            Evaluate a Pragma.
            </summary>
            <param name="context">The preprocess context.</param>
            <param name="pragmaName">The pragma's full name (&lt;prefix&gt;.&lt;pragma&gt;).</param>
            <param name="args">The arguments to the pragma.</param>
            <param name="parent">The parent element of the pragma.</param>
        </member>
        <member name="M:WixToolset.Extensibility.Services.IPreprocessHelper.PreprocessString(WixToolset.Extensibility.Data.IPreprocessContext,System.String)">
            <summary>
            Replaces parameters in the source text.
            </summary>
            <param name="context">The preprocess context.</param>
            <param name="value">Text that may contain parameters to replace.</param>
            <returns>Text after parameters have been replaced.</returns>
        </member>
        <member name="M:WixToolset.Extensibility.Services.IPreprocessHelper.RemoveVariable(WixToolset.Extensibility.Data.IPreprocessContext,System.String)">
            <summary>
            Remove a variable.
            </summary>
            <param name="context">The preprocess context.</param>
            <param name="name">The variable name.</param>
        </member>
        <member name="T:WixToolset.Extensibility.Services.IVariableResolution">
            <summary>
            Result when resolving a variable.
            </summary>
        </member>
        <member name="P:WixToolset.Extensibility.Services.IVariableResolution.DelayedResolve">
            <summary>
            Indicates if the value contains variables that cannot be resolved yet.
            </summary>
        </member>
        <member name="P:WixToolset.Extensibility.Services.IVariableResolution.IsDefault">
            <summary>
            Indicates whether a bind variables default value was used in the resolution.
            </summary>
        </member>
        <member name="P:WixToolset.Extensibility.Services.IVariableResolution.UpdatedValue">
            <summary>
            Indicates whether the resolution updated the value.
            </summary>
        </member>
        <member name="P:WixToolset.Extensibility.Services.IVariableResolution.Value">
            <summary>
            The resolved value.
            </summary>
        </member>
        <member name="M:WixToolset.Extensibility.Services.IVariableResolver.AddVariable(WixToolset.Data.SourceLineNumber,System.String,System.String,System.Boolean)">
            <summary>
            Add a variable.
            </summary>
            <param name="sourceLineNumber">The source line information for the value.</param>
            <param name="name">The name of the variable.</param>
            <param name="value">The value of the variable.</param>
            <param name="overridable">Indicates whether the variable can be overridden by an existing variable.</param>
        </member>
        <member name="M:WixToolset.Extensibility.Services.IVariableResolver.ResolveVariables(WixToolset.Data.SourceLineNumber,System.String)">
            <summary>
            Resolve the wix variables in a value.
            </summary>
            <param name="sourceLineNumbers">The source line information for the value.</param>
            <param name="value">The value to resolve.</param>
            <returns>The resolved result.</returns>
        </member>
        <member name="M:WixToolset.Extensibility.Services.IVariableResolver.ResolveVariables(WixToolset.Data.SourceLineNumber,System.String,System.Boolean)">
            <summary>
            Resolve the wix variables in a value.
            </summary>
            <param name="sourceLineNumbers">The source line information for the value.</param>
            <param name="value">The value to resolve.</param>
            <param name="errorOnUnknown">true if unknown variables should throw errors.</param>
            <returns>The resolved value.</returns>
        </member>
        <member name="M:WixToolset.Extensibility.Services.IVariableResolver.TryGetLocalizedControl(System.String,System.String,WixToolset.Data.LocalizedControl@)">
            <summary>
            Try to find localization information for dialog and (optional) control.
            </summary>
            <param name="dialog">Dialog identifier.</param>
            <param name="control">Optional control identifier.</param>
            <param name="localizedControl">Found localization information.</param>
            <returns>True if localized control was found, otherwise false.</returns>
        </member>
        <member name="T:WixToolset.Extensibility.Services.IWindowsInstallerBackendHelper">
            <summary>
            Interface provided to help Windows Installer backend extensions.
            </summary>
        </member>
        <member name="M:WixToolset.Extensibility.Services.IWindowsInstallerBackendHelper.CreateFileFacade(WixToolset.Data.Symbols.FileSymbol)">
            <summary>
            Creates a file facade from a <c>FileSymbol</c>.
            </summary>
            <param name="file"><c>FileSymbol</c> backing the facade.</param>
            <returns></returns>
        </member>
        <member name="M:WixToolset.Extensibility.Services.IWindowsInstallerBackendHelper.CreateFileFacade(WixToolset.Data.WindowsInstaller.Rows.FileRow)">
            <summary>
            Creates a file facade from a File row.
            </summary>
            <param name="fileRow"><c>FileRow</c></param>
            <returns>New <c>IFileFacade</c>.</returns>
        </member>
        <member name="M:WixToolset.Extensibility.Services.IWindowsInstallerBackendHelper.CreateRow(WixToolset.Data.IntermediateSection,WixToolset.Data.IntermediateSymbol,WixToolset.Data.WindowsInstaller.WindowsInstallerData,WixToolset.Data.WindowsInstaller.TableDefinition)">
            <summary>
            Creates a <see cref="T:WixToolset.Data.WindowsInstaller.Row"/> in the specified table.
            </summary>
            <param name="section">Parent section.</param>
            <param name="symbol">Symbol with line information for the row.</param>
            <param name="data">Windows Installer data.</param>
            <param name="tableDefinition">Table definition for the row.</param>
            <returns>Row created in the <paramref name="data"/>.</returns>
        </member>
        <member name="M:WixToolset.Extensibility.Services.IWindowsInstallerBackendHelper.TryAddSymbolToMatchingTableDefinitions(WixToolset.Data.IntermediateSection,WixToolset.Data.IntermediateSymbol,WixToolset.Data.WindowsInstaller.WindowsInstallerData,WixToolset.Data.WindowsInstaller.TableDefinitionCollection)">
            <summary>
            Looks up the registered <see cref="T:WixToolset.Data.WindowsInstaller.TableDefinition"/> for the given <see cref="T:WixToolset.Data.IntermediateSymbol"/> and creates a <see cref="T:WixToolset.Data.WindowsInstaller.Row"/> in that table.
            Goes sequentially through each field in the symbol and assigns the value to the column with the same index as the field.
            If the symbol's Id is registered as the primary key then that is used for the first column and the column data is offset by 1.
            </summary>
            <param name="section">Parent section.</param>
            <param name="symbol">Symbol to create the row from.</param>
            <param name="data">Windows Installer data.</param>
            <param name="tableDefinitions">Table definitions that have been registered with the binder.</param>
            <returns>True if a row was created.</returns>
        </member>
        <member name="T:WixToolset.Extensibility.Services.IWindowsInstallerDecompilerHelper">
            <summary>
            Interface provided to help Windows Installer decompiler extensions.
            </summary>
        </member>
        <member name="P:WixToolset.Extensibility.Services.IWindowsInstallerDecompilerHelper.RootElement">
            <summary>
            Gets or sets the root element of the decompiled output.
            </summary>
        </member>
        <member name="M:WixToolset.Extensibility.Services.IWindowsInstallerDecompilerHelper.AddElementToRoot(System.String,System.Object[])">
            <summary>
            Creates an element from the standard WiX Toolset namespace and adds it to the root document.
            </summary>
            <param name="name">Name of the element to create and add.</param>
            <param name="content">Optional content to add to the new element.</param>
            <returns>Element in the standard namespace.</returns>
        </member>
        <member name="M:WixToolset.Extensibility.Services.IWindowsInstallerDecompilerHelper.AddElementToRoot(System.Xml.Linq.XName,System.Object[])">
            <summary>
            Creates an element with the specified name and adds it to the root document.
            </summary>
            <param name="name">Name of the element to create and add.</param>
            <param name="content">Optional content to add to the new element.</param>
            <returns>Element in the standard namespace.</returns>
        </member>
        <member name="M:WixToolset.Extensibility.Services.IWindowsInstallerDecompilerHelper.AddElementToRoot(System.Xml.Linq.XElement)">
            <summary>
            Adds an existing element to the root document.
            </summary>
            <param name="element">Element to add.</param>
            <returns>Same element provided.</returns>
        </member>
        <member name="M:WixToolset.Extensibility.Services.IWindowsInstallerDecompilerHelper.CreateElement(System.String,System.Object[])">
            <summary>
            Creates an element from the standard WiX Toolset namespace.
            </summary>
            <param name="name">Name of the element to create.</param>
            <param name="content">Optional content to add to the new element.</param>
            <returns>Element in the standard namespace.</returns>
        </member>
        <member name="M:WixToolset.Extensibility.Services.IWindowsInstallerDecompilerHelper.GetIndexedElement(WixToolset.Data.WindowsInstaller.Row)">
            <summary>
            Get an element index by a row's table and primary keys.
            </summary>
            <param name="row">Row to get element.</param>
            <returns>Element indexed for the row or null if not found.</returns>
        </member>
        <member name="M:WixToolset.Extensibility.Services.IWindowsInstallerDecompilerHelper.GetIndexedElement(System.String,System.String)">
            <summary>
            Get an element index by table and primary key.
            </summary>
            <param name="table">Table name for indexed element.</param>
            <param name="primaryKey">Primary key for indexed element.</param>
            <returns>Element indexed for the table and primary key or null if not found.</returns>
        </member>
        <member name="M:WixToolset.Extensibility.Services.IWindowsInstallerDecompilerHelper.GetIndexedElement(System.String,System.String,System.String)">
            <summary>
            Get an element index by table and primary keys.
            </summary>
            <param name="table">Table name for indexed element.</param>
            <param name="primaryKey1">Primary key for first column indexed element.</param>
            <param name="primaryKey2">Primary key for second column indexed element.</param>
            <returns>Element indexed for the table and primary keys or null if not found.</returns>
        </member>
        <member name="M:WixToolset.Extensibility.Services.IWindowsInstallerDecompilerHelper.GetIndexedElement(System.String,System.String,System.String,System.String)">
            <summary>
            Get an element index by table and primary keys.
            </summary>
            <param name="table">Table name for indexed element.</param>
            <param name="primaryKey1">Primary key for first column indexed element.</param>
            <param name="primaryKey2">Primary key for second column indexed element.</param>
            <param name="primaryKey3">Primary key for third column indexed element.</param>
            <returns>Element indexed for the table and primary keys or null if not found.</returns>
        </member>
        <member name="M:WixToolset.Extensibility.Services.IWindowsInstallerDecompilerHelper.GetIndexedElement(System.String,System.String[])">
            <summary>
            Get an element index by table and primary keys.
            </summary>
            <param name="table">Table name for indexed element.</param>
            <param name="primaryKeys">Primary keys for indexed element.</param>
            <returns>Element indexed for the table and primary keys or null if not found.</returns>
        </member>
        <member name="M:WixToolset.Extensibility.Services.IWindowsInstallerDecompilerHelper.TryGetIndexedElement(WixToolset.Data.WindowsInstaller.Row,System.Xml.Linq.XElement@)">
            <summary>
            Try to get an element index by a row's table and primary keys.
            </summary>
            <param name="row">Row to get element.</param>
            <param name="element">Element indexed for the row.</param>
            <returns>True if the element was index otherwise false.</returns>
        </member>
        <member name="M:WixToolset.Extensibility.Services.IWindowsInstallerDecompilerHelper.TryGetIndexedElement(System.String,System.String,System.Xml.Linq.XElement@)">
            <summary>
            Try to get an element index by table name and primary key.
            </summary>
            <param name="table">Table name for indexed element.</param>
            <param name="primaryKey">Primary key for indexed element.</param>
            <param name="element">Element indexed for the table and primary key.</param>
            <returns>True if the element was index otherwise false.</returns>
        </member>
        <member name="M:WixToolset.Extensibility.Services.IWindowsInstallerDecompilerHelper.TryGetIndexedElement(System.String,System.String,System.String,System.Xml.Linq.XElement@)">
            <summary>
            Try to get an element index by table name and primary keys.
            </summary>
            <param name="table">Table name for indexed element.</param>
            <param name="primaryKey1">First column's primary key for indexed element.</param>
            <param name="primaryKey2">Second column's primary key for indexed element.</param>
            <param name="element">Element indexed for the table and primary key.</param>
            <returns>True if the element was index otherwise false.</returns>
        </member>
        <member name="M:WixToolset.Extensibility.Services.IWindowsInstallerDecompilerHelper.TryGetIndexedElement(System.String,System.String,System.String,System.String,System.Xml.Linq.XElement@)">
            <summary>
            Try to get an element index by table name and primary keys.
            </summary>
            <param name="table">Table name for indexed element.</param>
            <param name="primaryKey1">First column's primary key for indexed element.</param>
            <param name="primaryKey2">Second column's primary key for indexed element.</param>
            <param name="primaryKey3">Third column's primary key for indexed element.</param>
            <param name="element">Element indexed for the table and primary key.</param>
            <returns>True if the element was index otherwise false.</returns>
        </member>
        <member name="M:WixToolset.Extensibility.Services.IWindowsInstallerDecompilerHelper.TryGetIndexedElement(System.String,System.String[],System.Xml.Linq.XElement@)">
            <summary>
            Try to get an element index by table name and primary keys.
            </summary>
            <param name="table">Table name for indexed element.</param>
            <param name="primaryKeys">Primary keys for indexed element.</param>
            <param name="element">Element indexed for the table and primary key.</param>
            <returns>True if the element was index otherwise false.</returns>
        </member>
        <member name="M:WixToolset.Extensibility.Services.IWindowsInstallerDecompilerHelper.IndexElement(WixToolset.Data.WindowsInstaller.Row,System.Xml.Linq.XElement)">
            <summary>
            Index an element by a row's table and primary keys.
            </summary>
            <param name="row">Row to index element.</param>
            <param name="element">Element to index.</param>
        </member>
        <member name="M:WixToolset.Extensibility.Services.IWindowsInstallerDecompilerHelper.IndexElement(System.String,System.String,System.Xml.Linq.XElement)">
            <summary>
            Index an element by table and primary key.
            </summary>
            <param name="table">Table name to index element.</param>
            <param name="primaryKey">Primary key to index element.</param>
            <param name="element">Element to index.</param>
        </member>
        <member name="M:WixToolset.Extensibility.Services.IWindowsInstallerDecompilerHelper.IndexElement(System.String,System.String,System.String,System.Xml.Linq.XElement)">
            <summary>
            Index an element by table and primary keys.
            </summary>
            <param name="table">Table name to index element.</param>
            <param name="primaryKey1">First column's primary key to index element.</param>
            <param name="primaryKey2">Second column's primary key to index element.</param>
            <param name="element">Element to index.</param>
        </member>
        <member name="M:WixToolset.Extensibility.Services.IWindowsInstallerDecompilerHelper.IndexElement(System.String,System.String,System.String,System.String,System.Xml.Linq.XElement)">
            <summary>
            Index an element by table and primary keys.
            </summary>
            <param name="table">Table name to index element.</param>
            <param name="primaryKey1">First column's primary key to index element.</param>
            <param name="primaryKey2">Second column's primary key to index element.</param>
            <param name="primaryKey3">Third column's primary key to index element.</param>
            <param name="element">Element to index.</param>
        </member>
        <member name="M:WixToolset.Extensibility.Services.IWindowsInstallerDecompilerHelper.IndexElement(System.String,System.String[],System.Xml.Linq.XElement)">
            <summary>
            Index an element by table and primary keys.
            </summary>
            <param name="table">Table name to index element.</param>
            <param name="primaryKeys">Column's primary key to index element.</param>
            <param name="element">Element to index.</param>
        </member>
        <member name="T:WixToolset.Extensibility.Services.IWixBranding">
            <summary>
            WiX branding interface.
            </summary>
        </member>
        <member name="M:WixToolset.Extensibility.Services.IWixBranding.GetCreatingApplication">
            <summary>
            Gets the value for CreatingApplication field (MSI Summary Information Stream).
            </summary>
            <returns>String for creating application.</returns>
        </member>
        <member name="M:WixToolset.Extensibility.Services.IWixBranding.ReplacePlaceholders(System.String,System.Reflection.Assembly)">
            <summary>
            Replaces branding placeholders in original string.
            </summary>
            <param name="original">Original string containing placeholders to replace.</param>
            <param name="assembly">Optional assembly with branding information, if not specified core branding is used.</param>
            <returns></returns>
        </member>
        <member name="T:WixToolset.Extensibility.Services.IWixToolsetCoreServiceProvider">
            <summary>
            The core of the service provider used to add services to the service provider.
            </summary>
        </member>
        <member name="M:WixToolset.Extensibility.Services.IWixToolsetCoreServiceProvider.AddService(System.Type,System.Func{WixToolset.Extensibility.Services.IWixToolsetCoreServiceProvider,System.Collections.Generic.Dictionary{System.Type,System.Object},System.Object})">
            <summary>
            Adds a service to the service locator.
            </summary>
            <param name="serviceType">Type of the service to add.</param>
            <param name="creationFunction">
            A function that creates the service. The create function is provided the service provider
            itself to resolve additional services and a type dictionary that stores singleton services
            the creation function can add its service to.
            </param>
        </member>
        <member name="M:WixToolset.Extensibility.Services.IWixToolsetCoreServiceProvider.AddService``1(System.Func{WixToolset.Extensibility.Services.IWixToolsetCoreServiceProvider,System.Collections.Generic.Dictionary{System.Type,System.Object},``0})">
            <summary>
            Adds a service to the service locator.
            </summary>
            <param name="creationFunction">
            A function that creates the service. The create function is provided the service provider
            itself to resolve additional services and a type dictionary that stores singleton services
            the creation function can add its service to.
            </param>
        </member>
        <member name="T:WixToolset.Extensibility.Services.ServiceProviderExtensions">
            <summary>
            Service provider extensions.
            </summary>
        </member>
        <member name="M:WixToolset.Extensibility.Services.ServiceProviderExtensions.GetService``1(System.IServiceProvider)">
            <summary>
            Gets a service from the service provider.
            </summary>
            <typeparam name="T">Type of service to get.</typeparam>
            <param name="provider">Service provider.</param>
        </member>
        <member name="M:WixToolset.Extensibility.Services.ServiceProviderExtensions.TryGetService(System.IServiceProvider,System.Type,System.Object@)">
            <summary>
            Gets a service from the service provider.
            </summary>
            <param name="provider">Service provider.</param>
            <param name="serviceType">Type of service to get.</param>
            <param name="service">Retrieved service.</param>
            <returns>True if the service was found, otherwise false</returns>
        </member>
        <member name="M:WixToolset.Extensibility.Services.ServiceProviderExtensions.TryGetService``1(System.IServiceProvider,``0@)">
            <summary>
            Gets a service from the service provider.
            </summary>
            <typeparam name="T">Type of service to get.</typeparam>
            <param name="provider">Service provider.</param>
            <param name="service">Retrieved service.</param>
            <returns>True if the service was found, otherwise false</returns>
        </member>
    </members>
</doc>
